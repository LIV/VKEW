// This file is autogenerated by VKEW, the Vulkan Extension Wrangler. Do not modify!
// Timestamp : 2023-07-31T12:20:25.655535


/*
MIT License

Copyright (c) 2023 LIV Inc.

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
*/


#ifndef __vkew_h
#define __vkew_h

#include <vulkan/vulkan.h>

#ifdef __cplusplus
extern "C"
{
#endif

#define VKEW_GET_FUN(x) x
#define VKEW_VK_HEADER_VERSION_GENERATED 203
// Some correctness check macros to warn about inconsistant headers
#if (VK_HEADER_VERSION < VKEW_VK_HEADER_VERSION_GENERATED)
#define VKEW_HEADER_CHECK_COMPAT(x) _Pragma(#x)
#else
#define VKEW_HEADER_CHECK_COMPAT(x)
#endif
VKEW_HEADER_CHECK_COMPAT(message "WARN: VKEW has been generated with a vulkan header version that is superior to the one used to compile this code. This may cause errors or compilation failure.")
#if (VK_HEADER_VERSION != VKEW_VK_HEADER_VERSION_GENERATED)
#define VKEW_HEADER_CHECK_MATCH(x) _Pragma(#x)
#else
#define VKEW_HEADER_CHECK_MATCH(x)
#endif
VKEW_HEADER_CHECK_MATCH(message "WARN: VKEW has been generated with a vulkan header version that is different to the one used to compile this code. You might want to regenerate VKEW.h with the matching version to assure you have easy access to all extensions potentially available.")


// Instance:
static PFN_vkDestroySurfaceKHR __vkew_vkDestroySurfaceKHR = NULL;
static PFN_vkGetPhysicalDeviceSurfaceSupportKHR __vkew_vkGetPhysicalDeviceSurfaceSupportKHR = NULL;
static PFN_vkGetPhysicalDeviceSurfaceCapabilitiesKHR __vkew_vkGetPhysicalDeviceSurfaceCapabilitiesKHR = NULL;
static PFN_vkGetPhysicalDeviceSurfaceFormatsKHR __vkew_vkGetPhysicalDeviceSurfaceFormatsKHR = NULL;
static PFN_vkGetPhysicalDeviceSurfacePresentModesKHR __vkew_vkGetPhysicalDeviceSurfacePresentModesKHR = NULL;
static PFN_vkGetPhysicalDeviceDisplayPropertiesKHR __vkew_vkGetPhysicalDeviceDisplayPropertiesKHR = NULL;
static PFN_vkGetPhysicalDeviceDisplayPlanePropertiesKHR __vkew_vkGetPhysicalDeviceDisplayPlanePropertiesKHR = NULL;
static PFN_vkGetDisplayPlaneSupportedDisplaysKHR __vkew_vkGetDisplayPlaneSupportedDisplaysKHR = NULL;
static PFN_vkGetDisplayModePropertiesKHR __vkew_vkGetDisplayModePropertiesKHR = NULL;
static PFN_vkCreateDisplayModeKHR __vkew_vkCreateDisplayModeKHR = NULL;
static PFN_vkGetDisplayPlaneCapabilitiesKHR __vkew_vkGetDisplayPlaneCapabilitiesKHR = NULL;
static PFN_vkCreateDisplayPlaneSurfaceKHR __vkew_vkCreateDisplayPlaneSurfaceKHR = NULL;
static PFN_vkCreateDebugReportCallbackEXT __vkew_vkCreateDebugReportCallbackEXT = NULL;
static PFN_vkDestroyDebugReportCallbackEXT __vkew_vkDestroyDebugReportCallbackEXT = NULL;
static PFN_vkDebugReportMessageEXT __vkew_vkDebugReportMessageEXT = NULL;
static PFN_vkGetPhysicalDeviceExternalImageFormatPropertiesNV __vkew_vkGetPhysicalDeviceExternalImageFormatPropertiesNV = NULL;
static PFN_vkGetPhysicalDeviceFeatures2KHR __vkew_vkGetPhysicalDeviceFeatures2KHR = NULL;
static PFN_vkGetPhysicalDeviceProperties2KHR __vkew_vkGetPhysicalDeviceProperties2KHR = NULL;
static PFN_vkGetPhysicalDeviceFormatProperties2KHR __vkew_vkGetPhysicalDeviceFormatProperties2KHR = NULL;
static PFN_vkGetPhysicalDeviceImageFormatProperties2KHR __vkew_vkGetPhysicalDeviceImageFormatProperties2KHR = NULL;
static PFN_vkGetPhysicalDeviceQueueFamilyProperties2KHR __vkew_vkGetPhysicalDeviceQueueFamilyProperties2KHR = NULL;
static PFN_vkGetPhysicalDeviceMemoryProperties2KHR __vkew_vkGetPhysicalDeviceMemoryProperties2KHR = NULL;
static PFN_vkGetPhysicalDeviceSparseImageFormatProperties2KHR __vkew_vkGetPhysicalDeviceSparseImageFormatProperties2KHR = NULL;
static PFN_vkEnumeratePhysicalDeviceGroupsKHR __vkew_vkEnumeratePhysicalDeviceGroupsKHR = NULL;
static PFN_vkGetPhysicalDeviceExternalBufferPropertiesKHR __vkew_vkGetPhysicalDeviceExternalBufferPropertiesKHR = NULL;
static PFN_vkGetPhysicalDeviceExternalSemaphorePropertiesKHR __vkew_vkGetPhysicalDeviceExternalSemaphorePropertiesKHR = NULL;
static PFN_vkReleaseDisplayEXT __vkew_vkReleaseDisplayEXT = NULL;
static PFN_vkGetPhysicalDeviceSurfaceCapabilities2EXT __vkew_vkGetPhysicalDeviceSurfaceCapabilities2EXT = NULL;
static PFN_vkGetPhysicalDeviceExternalFencePropertiesKHR __vkew_vkGetPhysicalDeviceExternalFencePropertiesKHR = NULL;
static PFN_vkGetPhysicalDeviceSurfaceCapabilities2KHR __vkew_vkGetPhysicalDeviceSurfaceCapabilities2KHR = NULL;
static PFN_vkGetPhysicalDeviceSurfaceFormats2KHR __vkew_vkGetPhysicalDeviceSurfaceFormats2KHR = NULL;
static PFN_vkGetPhysicalDeviceDisplayProperties2KHR __vkew_vkGetPhysicalDeviceDisplayProperties2KHR = NULL;
static PFN_vkGetPhysicalDeviceDisplayPlaneProperties2KHR __vkew_vkGetPhysicalDeviceDisplayPlaneProperties2KHR = NULL;
static PFN_vkGetDisplayModeProperties2KHR __vkew_vkGetDisplayModeProperties2KHR = NULL;
static PFN_vkGetDisplayPlaneCapabilities2KHR __vkew_vkGetDisplayPlaneCapabilities2KHR = NULL;
static PFN_vkSetDebugUtilsObjectNameEXT __vkew_vkSetDebugUtilsObjectNameEXT = NULL;
static PFN_vkSetDebugUtilsObjectTagEXT __vkew_vkSetDebugUtilsObjectTagEXT = NULL;
static PFN_vkQueueBeginDebugUtilsLabelEXT __vkew_vkQueueBeginDebugUtilsLabelEXT = NULL;
static PFN_vkQueueEndDebugUtilsLabelEXT __vkew_vkQueueEndDebugUtilsLabelEXT = NULL;
static PFN_vkQueueInsertDebugUtilsLabelEXT __vkew_vkQueueInsertDebugUtilsLabelEXT = NULL;
static PFN_vkCmdBeginDebugUtilsLabelEXT __vkew_vkCmdBeginDebugUtilsLabelEXT = NULL;
static PFN_vkCmdEndDebugUtilsLabelEXT __vkew_vkCmdEndDebugUtilsLabelEXT = NULL;
static PFN_vkCmdInsertDebugUtilsLabelEXT __vkew_vkCmdInsertDebugUtilsLabelEXT = NULL;
static PFN_vkCreateDebugUtilsMessengerEXT __vkew_vkCreateDebugUtilsMessengerEXT = NULL;
static PFN_vkDestroyDebugUtilsMessengerEXT __vkew_vkDestroyDebugUtilsMessengerEXT = NULL;
static PFN_vkSubmitDebugUtilsMessageEXT __vkew_vkSubmitDebugUtilsMessageEXT = NULL;
static PFN_vkCreateHeadlessSurfaceEXT __vkew_vkCreateHeadlessSurfaceEXT = NULL;
static PFN_vkAcquireDrmDisplayEXT __vkew_vkAcquireDrmDisplayEXT = NULL;
static PFN_vkGetDrmDisplayEXT __vkew_vkGetDrmDisplayEXT = NULL;
#ifdef VK_USE_PLATFORM_XLIB
	static PFN_vkCreateXlibSurfaceKHR __vkew_vkCreateXlibSurfaceKHR = NULL;
#endif //xlib
#ifdef VK_USE_PLATFORM_XLIB
	static PFN_vkGetPhysicalDeviceXlibPresentationSupportKHR __vkew_vkGetPhysicalDeviceXlibPresentationSupportKHR = NULL;
#endif //xlib
#ifdef VK_USE_PLATFORM_XCB
	static PFN_vkCreateXcbSurfaceKHR __vkew_vkCreateXcbSurfaceKHR = NULL;
#endif //xcb
#ifdef VK_USE_PLATFORM_XCB
	static PFN_vkGetPhysicalDeviceXcbPresentationSupportKHR __vkew_vkGetPhysicalDeviceXcbPresentationSupportKHR = NULL;
#endif //xcb
#ifdef VK_USE_PLATFORM_WAYLAND
	static PFN_vkCreateWaylandSurfaceKHR __vkew_vkCreateWaylandSurfaceKHR = NULL;
#endif //wayland
#ifdef VK_USE_PLATFORM_WAYLAND
	static PFN_vkGetPhysicalDeviceWaylandPresentationSupportKHR __vkew_vkGetPhysicalDeviceWaylandPresentationSupportKHR = NULL;
#endif //wayland
#ifdef VK_USE_PLATFORM_ANDROID
	static PFN_vkCreateAndroidSurfaceKHR __vkew_vkCreateAndroidSurfaceKHR = NULL;
#endif //android
#ifdef VK_USE_PLATFORM_WIN32
	static PFN_vkCreateWin32SurfaceKHR __vkew_vkCreateWin32SurfaceKHR = NULL;
#endif //win32
#ifdef VK_USE_PLATFORM_WIN32
	static PFN_vkGetPhysicalDeviceWin32PresentationSupportKHR __vkew_vkGetPhysicalDeviceWin32PresentationSupportKHR = NULL;
#endif //win32
#ifdef VK_USE_PLATFORM_GGP
	static PFN_vkCreateStreamDescriptorSurfaceGGP __vkew_vkCreateStreamDescriptorSurfaceGGP = NULL;
#endif //ggp
#ifdef VK_USE_PLATFORM_VI
	static PFN_vkCreateViSurfaceNN __vkew_vkCreateViSurfaceNN = NULL;
#endif //vi
#ifdef VK_USE_PLATFORM_XLIB_XRANDR
	static PFN_vkAcquireXlibDisplayEXT __vkew_vkAcquireXlibDisplayEXT = NULL;
#endif //xlib_xrandr
#ifdef VK_USE_PLATFORM_XLIB_XRANDR
	static PFN_vkGetRandROutputDisplayEXT __vkew_vkGetRandROutputDisplayEXT = NULL;
#endif //xlib_xrandr
#ifdef VK_USE_PLATFORM_IOS
	static PFN_vkCreateIOSSurfaceMVK __vkew_vkCreateIOSSurfaceMVK = NULL;
#endif //ios
#ifdef VK_USE_PLATFORM_MACOS
	static PFN_vkCreateMacOSSurfaceMVK __vkew_vkCreateMacOSSurfaceMVK = NULL;
#endif //macos
#ifdef VK_USE_PLATFORM_FUCHSIA
	static PFN_vkCreateImagePipeSurfaceFUCHSIA __vkew_vkCreateImagePipeSurfaceFUCHSIA = NULL;
#endif //fuchsia
#ifdef VK_USE_PLATFORM_METAL
	static PFN_vkCreateMetalSurfaceEXT __vkew_vkCreateMetalSurfaceEXT = NULL;
#endif //metal
#ifdef VK_USE_PLATFORM_DIRECTFB
	static PFN_vkCreateDirectFBSurfaceEXT __vkew_vkCreateDirectFBSurfaceEXT = NULL;
#endif //directfb
#ifdef VK_USE_PLATFORM_DIRECTFB
	static PFN_vkGetPhysicalDeviceDirectFBPresentationSupportEXT __vkew_vkGetPhysicalDeviceDirectFBPresentationSupportEXT = NULL;
#endif //directfb
#ifdef VK_USE_PLATFORM_SCREEN
	static PFN_vkCreateScreenSurfaceQNX __vkew_vkCreateScreenSurfaceQNX = NULL;
#endif //screen
#ifdef VK_USE_PLATFORM_SCREEN
	static PFN_vkGetPhysicalDeviceScreenPresentationSupportQNX __vkew_vkGetPhysicalDeviceScreenPresentationSupportQNX = NULL;
#endif //screen


// Device:
static PFN_vkCreateSwapchainKHR __vkew_vkCreateSwapchainKHR = NULL;
static PFN_vkDestroySwapchainKHR __vkew_vkDestroySwapchainKHR = NULL;
static PFN_vkGetSwapchainImagesKHR __vkew_vkGetSwapchainImagesKHR = NULL;
static PFN_vkAcquireNextImageKHR __vkew_vkAcquireNextImageKHR = NULL;
static PFN_vkQueuePresentKHR __vkew_vkQueuePresentKHR = NULL;
static PFN_vkCreateSharedSwapchainsKHR __vkew_vkCreateSharedSwapchainsKHR = NULL;
static PFN_vkDebugMarkerSetObjectTagEXT __vkew_vkDebugMarkerSetObjectTagEXT = NULL;
static PFN_vkDebugMarkerSetObjectNameEXT __vkew_vkDebugMarkerSetObjectNameEXT = NULL;
static PFN_vkCmdDebugMarkerBeginEXT __vkew_vkCmdDebugMarkerBeginEXT = NULL;
static PFN_vkCmdDebugMarkerEndEXT __vkew_vkCmdDebugMarkerEndEXT = NULL;
static PFN_vkCmdDebugMarkerInsertEXT __vkew_vkCmdDebugMarkerInsertEXT = NULL;
static PFN_vkCmdBindTransformFeedbackBuffersEXT __vkew_vkCmdBindTransformFeedbackBuffersEXT = NULL;
static PFN_vkCmdBeginTransformFeedbackEXT __vkew_vkCmdBeginTransformFeedbackEXT = NULL;
static PFN_vkCmdEndTransformFeedbackEXT __vkew_vkCmdEndTransformFeedbackEXT = NULL;
static PFN_vkCmdBeginQueryIndexedEXT __vkew_vkCmdBeginQueryIndexedEXT = NULL;
static PFN_vkCmdEndQueryIndexedEXT __vkew_vkCmdEndQueryIndexedEXT = NULL;
static PFN_vkCmdDrawIndirectByteCountEXT __vkew_vkCmdDrawIndirectByteCountEXT = NULL;
static PFN_vkCreateCuModuleNVX __vkew_vkCreateCuModuleNVX = NULL;
static PFN_vkCreateCuFunctionNVX __vkew_vkCreateCuFunctionNVX = NULL;
static PFN_vkDestroyCuModuleNVX __vkew_vkDestroyCuModuleNVX = NULL;
static PFN_vkDestroyCuFunctionNVX __vkew_vkDestroyCuFunctionNVX = NULL;
static PFN_vkCmdCuLaunchKernelNVX __vkew_vkCmdCuLaunchKernelNVX = NULL;
static PFN_vkGetImageViewHandleNVX __vkew_vkGetImageViewHandleNVX = NULL;
static PFN_vkGetImageViewAddressNVX __vkew_vkGetImageViewAddressNVX = NULL;
static PFN_vkCmdDrawIndirectCountAMD __vkew_vkCmdDrawIndirectCountAMD = NULL;
static PFN_vkCmdDrawIndexedIndirectCountAMD __vkew_vkCmdDrawIndexedIndirectCountAMD = NULL;
static PFN_vkGetShaderInfoAMD __vkew_vkGetShaderInfoAMD = NULL;
static PFN_vkCmdBeginRenderingKHR __vkew_vkCmdBeginRenderingKHR = NULL;
static PFN_vkCmdEndRenderingKHR __vkew_vkCmdEndRenderingKHR = NULL;
static PFN_vkGetDeviceGroupPeerMemoryFeaturesKHR __vkew_vkGetDeviceGroupPeerMemoryFeaturesKHR = NULL;
static PFN_vkCmdSetDeviceMaskKHR __vkew_vkCmdSetDeviceMaskKHR = NULL;
static PFN_vkCmdDispatchBaseKHR __vkew_vkCmdDispatchBaseKHR = NULL;
static PFN_vkTrimCommandPoolKHR __vkew_vkTrimCommandPoolKHR = NULL;
static PFN_vkGetMemoryFdKHR __vkew_vkGetMemoryFdKHR = NULL;
static PFN_vkGetMemoryFdPropertiesKHR __vkew_vkGetMemoryFdPropertiesKHR = NULL;
static PFN_vkImportSemaphoreFdKHR __vkew_vkImportSemaphoreFdKHR = NULL;
static PFN_vkGetSemaphoreFdKHR __vkew_vkGetSemaphoreFdKHR = NULL;
static PFN_vkCmdPushDescriptorSetKHR __vkew_vkCmdPushDescriptorSetKHR = NULL;
static PFN_vkCmdBeginConditionalRenderingEXT __vkew_vkCmdBeginConditionalRenderingEXT = NULL;
static PFN_vkCmdEndConditionalRenderingEXT __vkew_vkCmdEndConditionalRenderingEXT = NULL;
static PFN_vkCreateDescriptorUpdateTemplateKHR __vkew_vkCreateDescriptorUpdateTemplateKHR = NULL;
static PFN_vkDestroyDescriptorUpdateTemplateKHR __vkew_vkDestroyDescriptorUpdateTemplateKHR = NULL;
static PFN_vkUpdateDescriptorSetWithTemplateKHR __vkew_vkUpdateDescriptorSetWithTemplateKHR = NULL;
static PFN_vkCmdSetViewportWScalingNV __vkew_vkCmdSetViewportWScalingNV = NULL;
static PFN_vkDisplayPowerControlEXT __vkew_vkDisplayPowerControlEXT = NULL;
static PFN_vkRegisterDeviceEventEXT __vkew_vkRegisterDeviceEventEXT = NULL;
static PFN_vkRegisterDisplayEventEXT __vkew_vkRegisterDisplayEventEXT = NULL;
static PFN_vkGetSwapchainCounterEXT __vkew_vkGetSwapchainCounterEXT = NULL;
static PFN_vkGetRefreshCycleDurationGOOGLE __vkew_vkGetRefreshCycleDurationGOOGLE = NULL;
static PFN_vkGetPastPresentationTimingGOOGLE __vkew_vkGetPastPresentationTimingGOOGLE = NULL;
static PFN_vkCmdSetDiscardRectangleEXT __vkew_vkCmdSetDiscardRectangleEXT = NULL;
static PFN_vkSetHdrMetadataEXT __vkew_vkSetHdrMetadataEXT = NULL;
static PFN_vkCreateRenderPass2KHR __vkew_vkCreateRenderPass2KHR = NULL;
static PFN_vkCmdBeginRenderPass2KHR __vkew_vkCmdBeginRenderPass2KHR = NULL;
static PFN_vkCmdNextSubpass2KHR __vkew_vkCmdNextSubpass2KHR = NULL;
static PFN_vkCmdEndRenderPass2KHR __vkew_vkCmdEndRenderPass2KHR = NULL;
static PFN_vkGetSwapchainStatusKHR __vkew_vkGetSwapchainStatusKHR = NULL;
static PFN_vkImportFenceFdKHR __vkew_vkImportFenceFdKHR = NULL;
static PFN_vkGetFenceFdKHR __vkew_vkGetFenceFdKHR = NULL;
static PFN_vkEnumeratePhysicalDeviceQueueFamilyPerformanceQueryCountersKHR __vkew_vkEnumeratePhysicalDeviceQueueFamilyPerformanceQueryCountersKHR = NULL;
static PFN_vkGetPhysicalDeviceQueueFamilyPerformanceQueryPassesKHR __vkew_vkGetPhysicalDeviceQueueFamilyPerformanceQueryPassesKHR = NULL;
static PFN_vkAcquireProfilingLockKHR __vkew_vkAcquireProfilingLockKHR = NULL;
static PFN_vkReleaseProfilingLockKHR __vkew_vkReleaseProfilingLockKHR = NULL;
static PFN_vkCmdSetSampleLocationsEXT __vkew_vkCmdSetSampleLocationsEXT = NULL;
static PFN_vkGetPhysicalDeviceMultisamplePropertiesEXT __vkew_vkGetPhysicalDeviceMultisamplePropertiesEXT = NULL;
static PFN_vkGetImageMemoryRequirements2KHR __vkew_vkGetImageMemoryRequirements2KHR = NULL;
static PFN_vkGetBufferMemoryRequirements2KHR __vkew_vkGetBufferMemoryRequirements2KHR = NULL;
static PFN_vkGetImageSparseMemoryRequirements2KHR __vkew_vkGetImageSparseMemoryRequirements2KHR = NULL;
static PFN_vkCreateAccelerationStructureKHR __vkew_vkCreateAccelerationStructureKHR = NULL;
static PFN_vkDestroyAccelerationStructureKHR __vkew_vkDestroyAccelerationStructureKHR = NULL;
static PFN_vkCmdBuildAccelerationStructuresKHR __vkew_vkCmdBuildAccelerationStructuresKHR = NULL;
static PFN_vkCmdBuildAccelerationStructuresIndirectKHR __vkew_vkCmdBuildAccelerationStructuresIndirectKHR = NULL;
static PFN_vkBuildAccelerationStructuresKHR __vkew_vkBuildAccelerationStructuresKHR = NULL;
static PFN_vkCopyAccelerationStructureKHR __vkew_vkCopyAccelerationStructureKHR = NULL;
static PFN_vkCopyAccelerationStructureToMemoryKHR __vkew_vkCopyAccelerationStructureToMemoryKHR = NULL;
static PFN_vkCopyMemoryToAccelerationStructureKHR __vkew_vkCopyMemoryToAccelerationStructureKHR = NULL;
static PFN_vkWriteAccelerationStructuresPropertiesKHR __vkew_vkWriteAccelerationStructuresPropertiesKHR = NULL;
static PFN_vkCmdCopyAccelerationStructureKHR __vkew_vkCmdCopyAccelerationStructureKHR = NULL;
static PFN_vkCmdCopyAccelerationStructureToMemoryKHR __vkew_vkCmdCopyAccelerationStructureToMemoryKHR = NULL;
static PFN_vkCmdCopyMemoryToAccelerationStructureKHR __vkew_vkCmdCopyMemoryToAccelerationStructureKHR = NULL;
static PFN_vkGetAccelerationStructureDeviceAddressKHR __vkew_vkGetAccelerationStructureDeviceAddressKHR = NULL;
static PFN_vkCmdWriteAccelerationStructuresPropertiesKHR __vkew_vkCmdWriteAccelerationStructuresPropertiesKHR = NULL;
static PFN_vkGetDeviceAccelerationStructureCompatibilityKHR __vkew_vkGetDeviceAccelerationStructureCompatibilityKHR = NULL;
static PFN_vkGetAccelerationStructureBuildSizesKHR __vkew_vkGetAccelerationStructureBuildSizesKHR = NULL;
static PFN_vkCmdTraceRaysKHR __vkew_vkCmdTraceRaysKHR = NULL;
static PFN_vkCreateRayTracingPipelinesKHR __vkew_vkCreateRayTracingPipelinesKHR = NULL;
static PFN_vkGetRayTracingShaderGroupHandlesKHR __vkew_vkGetRayTracingShaderGroupHandlesKHR = NULL;
static PFN_vkGetRayTracingCaptureReplayShaderGroupHandlesKHR __vkew_vkGetRayTracingCaptureReplayShaderGroupHandlesKHR = NULL;
static PFN_vkCmdTraceRaysIndirectKHR __vkew_vkCmdTraceRaysIndirectKHR = NULL;
static PFN_vkGetRayTracingShaderGroupStackSizeKHR __vkew_vkGetRayTracingShaderGroupStackSizeKHR = NULL;
static PFN_vkCmdSetRayTracingPipelineStackSizeKHR __vkew_vkCmdSetRayTracingPipelineStackSizeKHR = NULL;
static PFN_vkCreateSamplerYcbcrConversionKHR __vkew_vkCreateSamplerYcbcrConversionKHR = NULL;
static PFN_vkDestroySamplerYcbcrConversionKHR __vkew_vkDestroySamplerYcbcrConversionKHR = NULL;
static PFN_vkBindBufferMemory2KHR __vkew_vkBindBufferMemory2KHR = NULL;
static PFN_vkBindImageMemory2KHR __vkew_vkBindImageMemory2KHR = NULL;
static PFN_vkGetImageDrmFormatModifierPropertiesEXT __vkew_vkGetImageDrmFormatModifierPropertiesEXT = NULL;
static PFN_vkCreateValidationCacheEXT __vkew_vkCreateValidationCacheEXT = NULL;
static PFN_vkDestroyValidationCacheEXT __vkew_vkDestroyValidationCacheEXT = NULL;
static PFN_vkMergeValidationCachesEXT __vkew_vkMergeValidationCachesEXT = NULL;
static PFN_vkGetValidationCacheDataEXT __vkew_vkGetValidationCacheDataEXT = NULL;
static PFN_vkCmdBindShadingRateImageNV __vkew_vkCmdBindShadingRateImageNV = NULL;
static PFN_vkCmdSetViewportShadingRatePaletteNV __vkew_vkCmdSetViewportShadingRatePaletteNV = NULL;
static PFN_vkCmdSetCoarseSampleOrderNV __vkew_vkCmdSetCoarseSampleOrderNV = NULL;
static PFN_vkCreateAccelerationStructureNV __vkew_vkCreateAccelerationStructureNV = NULL;
static PFN_vkDestroyAccelerationStructureNV __vkew_vkDestroyAccelerationStructureNV = NULL;
static PFN_vkGetAccelerationStructureMemoryRequirementsNV __vkew_vkGetAccelerationStructureMemoryRequirementsNV = NULL;
static PFN_vkBindAccelerationStructureMemoryNV __vkew_vkBindAccelerationStructureMemoryNV = NULL;
static PFN_vkCmdBuildAccelerationStructureNV __vkew_vkCmdBuildAccelerationStructureNV = NULL;
static PFN_vkCmdCopyAccelerationStructureNV __vkew_vkCmdCopyAccelerationStructureNV = NULL;
static PFN_vkCmdTraceRaysNV __vkew_vkCmdTraceRaysNV = NULL;
static PFN_vkCreateRayTracingPipelinesNV __vkew_vkCreateRayTracingPipelinesNV = NULL;
static PFN_vkGetRayTracingShaderGroupHandlesNV __vkew_vkGetRayTracingShaderGroupHandlesNV = NULL;
static PFN_vkGetAccelerationStructureHandleNV __vkew_vkGetAccelerationStructureHandleNV = NULL;
static PFN_vkCmdWriteAccelerationStructuresPropertiesNV __vkew_vkCmdWriteAccelerationStructuresPropertiesNV = NULL;
static PFN_vkCompileDeferredNV __vkew_vkCompileDeferredNV = NULL;
static PFN_vkGetDescriptorSetLayoutSupportKHR __vkew_vkGetDescriptorSetLayoutSupportKHR = NULL;
static PFN_vkCmdDrawIndirectCountKHR __vkew_vkCmdDrawIndirectCountKHR = NULL;
static PFN_vkCmdDrawIndexedIndirectCountKHR __vkew_vkCmdDrawIndexedIndirectCountKHR = NULL;
static PFN_vkGetMemoryHostPointerPropertiesEXT __vkew_vkGetMemoryHostPointerPropertiesEXT = NULL;
static PFN_vkCmdWriteBufferMarkerAMD __vkew_vkCmdWriteBufferMarkerAMD = NULL;
static PFN_vkGetPhysicalDeviceCalibrateableTimeDomainsEXT __vkew_vkGetPhysicalDeviceCalibrateableTimeDomainsEXT = NULL;
static PFN_vkGetCalibratedTimestampsEXT __vkew_vkGetCalibratedTimestampsEXT = NULL;
static PFN_vkCmdDrawMeshTasksNV __vkew_vkCmdDrawMeshTasksNV = NULL;
static PFN_vkCmdDrawMeshTasksIndirectNV __vkew_vkCmdDrawMeshTasksIndirectNV = NULL;
static PFN_vkCmdDrawMeshTasksIndirectCountNV __vkew_vkCmdDrawMeshTasksIndirectCountNV = NULL;
static PFN_vkCmdSetExclusiveScissorNV __vkew_vkCmdSetExclusiveScissorNV = NULL;
static PFN_vkCmdSetCheckpointNV __vkew_vkCmdSetCheckpointNV = NULL;
static PFN_vkGetQueueCheckpointDataNV __vkew_vkGetQueueCheckpointDataNV = NULL;
static PFN_vkGetSemaphoreCounterValueKHR __vkew_vkGetSemaphoreCounterValueKHR = NULL;
static PFN_vkWaitSemaphoresKHR __vkew_vkWaitSemaphoresKHR = NULL;
static PFN_vkSignalSemaphoreKHR __vkew_vkSignalSemaphoreKHR = NULL;
static PFN_vkInitializePerformanceApiINTEL __vkew_vkInitializePerformanceApiINTEL = NULL;
static PFN_vkUninitializePerformanceApiINTEL __vkew_vkUninitializePerformanceApiINTEL = NULL;
static PFN_vkCmdSetPerformanceMarkerINTEL __vkew_vkCmdSetPerformanceMarkerINTEL = NULL;
static PFN_vkCmdSetPerformanceStreamMarkerINTEL __vkew_vkCmdSetPerformanceStreamMarkerINTEL = NULL;
static PFN_vkCmdSetPerformanceOverrideINTEL __vkew_vkCmdSetPerformanceOverrideINTEL = NULL;
static PFN_vkAcquirePerformanceConfigurationINTEL __vkew_vkAcquirePerformanceConfigurationINTEL = NULL;
static PFN_vkReleasePerformanceConfigurationINTEL __vkew_vkReleasePerformanceConfigurationINTEL = NULL;
static PFN_vkQueueSetPerformanceConfigurationINTEL __vkew_vkQueueSetPerformanceConfigurationINTEL = NULL;
static PFN_vkGetPerformanceParameterINTEL __vkew_vkGetPerformanceParameterINTEL = NULL;
static PFN_vkSetLocalDimmingAMD __vkew_vkSetLocalDimmingAMD = NULL;
static PFN_vkGetPhysicalDeviceFragmentShadingRatesKHR __vkew_vkGetPhysicalDeviceFragmentShadingRatesKHR = NULL;
static PFN_vkCmdSetFragmentShadingRateKHR __vkew_vkCmdSetFragmentShadingRateKHR = NULL;
static PFN_vkGetBufferDeviceAddressEXT __vkew_vkGetBufferDeviceAddressEXT = NULL;
static PFN_vkGetPhysicalDeviceToolPropertiesEXT __vkew_vkGetPhysicalDeviceToolPropertiesEXT = NULL;
static PFN_vkWaitForPresentKHR __vkew_vkWaitForPresentKHR = NULL;
static PFN_vkGetPhysicalDeviceCooperativeMatrixPropertiesNV __vkew_vkGetPhysicalDeviceCooperativeMatrixPropertiesNV = NULL;
static PFN_vkGetPhysicalDeviceSupportedFramebufferMixedSamplesCombinationsNV __vkew_vkGetPhysicalDeviceSupportedFramebufferMixedSamplesCombinationsNV = NULL;
static PFN_vkGetBufferDeviceAddressKHR __vkew_vkGetBufferDeviceAddressKHR = NULL;
static PFN_vkGetBufferOpaqueCaptureAddressKHR __vkew_vkGetBufferOpaqueCaptureAddressKHR = NULL;
static PFN_vkGetDeviceMemoryOpaqueCaptureAddressKHR __vkew_vkGetDeviceMemoryOpaqueCaptureAddressKHR = NULL;
static PFN_vkCmdSetLineStippleEXT __vkew_vkCmdSetLineStippleEXT = NULL;
static PFN_vkResetQueryPoolEXT __vkew_vkResetQueryPoolEXT = NULL;
static PFN_vkCmdSetCullModeEXT __vkew_vkCmdSetCullModeEXT = NULL;
static PFN_vkCmdSetFrontFaceEXT __vkew_vkCmdSetFrontFaceEXT = NULL;
static PFN_vkCmdSetPrimitiveTopologyEXT __vkew_vkCmdSetPrimitiveTopologyEXT = NULL;
static PFN_vkCmdSetViewportWithCountEXT __vkew_vkCmdSetViewportWithCountEXT = NULL;
static PFN_vkCmdSetScissorWithCountEXT __vkew_vkCmdSetScissorWithCountEXT = NULL;
static PFN_vkCmdBindVertexBuffers2EXT __vkew_vkCmdBindVertexBuffers2EXT = NULL;
static PFN_vkCmdSetDepthTestEnableEXT __vkew_vkCmdSetDepthTestEnableEXT = NULL;
static PFN_vkCmdSetDepthWriteEnableEXT __vkew_vkCmdSetDepthWriteEnableEXT = NULL;
static PFN_vkCmdSetDepthCompareOpEXT __vkew_vkCmdSetDepthCompareOpEXT = NULL;
static PFN_vkCmdSetDepthBoundsTestEnableEXT __vkew_vkCmdSetDepthBoundsTestEnableEXT = NULL;
static PFN_vkCmdSetStencilTestEnableEXT __vkew_vkCmdSetStencilTestEnableEXT = NULL;
static PFN_vkCmdSetStencilOpEXT __vkew_vkCmdSetStencilOpEXT = NULL;
static PFN_vkCreateDeferredOperationKHR __vkew_vkCreateDeferredOperationKHR = NULL;
static PFN_vkDestroyDeferredOperationKHR __vkew_vkDestroyDeferredOperationKHR = NULL;
static PFN_vkGetDeferredOperationMaxConcurrencyKHR __vkew_vkGetDeferredOperationMaxConcurrencyKHR = NULL;
static PFN_vkGetDeferredOperationResultKHR __vkew_vkGetDeferredOperationResultKHR = NULL;
static PFN_vkDeferredOperationJoinKHR __vkew_vkDeferredOperationJoinKHR = NULL;
static PFN_vkGetPipelineExecutablePropertiesKHR __vkew_vkGetPipelineExecutablePropertiesKHR = NULL;
static PFN_vkGetPipelineExecutableStatisticsKHR __vkew_vkGetPipelineExecutableStatisticsKHR = NULL;
static PFN_vkGetPipelineExecutableInternalRepresentationsKHR __vkew_vkGetPipelineExecutableInternalRepresentationsKHR = NULL;
static PFN_vkGetGeneratedCommandsMemoryRequirementsNV __vkew_vkGetGeneratedCommandsMemoryRequirementsNV = NULL;
static PFN_vkCmdPreprocessGeneratedCommandsNV __vkew_vkCmdPreprocessGeneratedCommandsNV = NULL;
static PFN_vkCmdExecuteGeneratedCommandsNV __vkew_vkCmdExecuteGeneratedCommandsNV = NULL;
static PFN_vkCmdBindPipelineShaderGroupNV __vkew_vkCmdBindPipelineShaderGroupNV = NULL;
static PFN_vkCreateIndirectCommandsLayoutNV __vkew_vkCreateIndirectCommandsLayoutNV = NULL;
static PFN_vkDestroyIndirectCommandsLayoutNV __vkew_vkDestroyIndirectCommandsLayoutNV = NULL;
static PFN_vkCreatePrivateDataSlotEXT __vkew_vkCreatePrivateDataSlotEXT = NULL;
static PFN_vkDestroyPrivateDataSlotEXT __vkew_vkDestroyPrivateDataSlotEXT = NULL;
static PFN_vkSetPrivateDataEXT __vkew_vkSetPrivateDataEXT = NULL;
static PFN_vkGetPrivateDataEXT __vkew_vkGetPrivateDataEXT = NULL;
static PFN_vkCmdSetEvent2KHR __vkew_vkCmdSetEvent2KHR = NULL;
static PFN_vkCmdResetEvent2KHR __vkew_vkCmdResetEvent2KHR = NULL;
static PFN_vkCmdWaitEvents2KHR __vkew_vkCmdWaitEvents2KHR = NULL;
static PFN_vkCmdPipelineBarrier2KHR __vkew_vkCmdPipelineBarrier2KHR = NULL;
static PFN_vkCmdWriteTimestamp2KHR __vkew_vkCmdWriteTimestamp2KHR = NULL;
static PFN_vkQueueSubmit2KHR __vkew_vkQueueSubmit2KHR = NULL;
static PFN_vkCmdSetFragmentShadingRateEnumNV __vkew_vkCmdSetFragmentShadingRateEnumNV = NULL;
static PFN_vkCmdCopyBuffer2KHR __vkew_vkCmdCopyBuffer2KHR = NULL;
static PFN_vkCmdCopyImage2KHR __vkew_vkCmdCopyImage2KHR = NULL;
static PFN_vkCmdCopyBufferToImage2KHR __vkew_vkCmdCopyBufferToImage2KHR = NULL;
static PFN_vkCmdCopyImageToBuffer2KHR __vkew_vkCmdCopyImageToBuffer2KHR = NULL;
static PFN_vkCmdBlitImage2KHR __vkew_vkCmdBlitImage2KHR = NULL;
static PFN_vkCmdResolveImage2KHR __vkew_vkCmdResolveImage2KHR = NULL;
static PFN_vkCmdSetVertexInputEXT __vkew_vkCmdSetVertexInputEXT = NULL;
static PFN_vkGetDeviceSubpassShadingMaxWorkgroupSizeHUAWEI __vkew_vkGetDeviceSubpassShadingMaxWorkgroupSizeHUAWEI = NULL;
static PFN_vkCmdSubpassShadingHUAWEI __vkew_vkCmdSubpassShadingHUAWEI = NULL;
static PFN_vkCmdBindInvocationMaskHUAWEI __vkew_vkCmdBindInvocationMaskHUAWEI = NULL;
static PFN_vkGetMemoryRemoteAddressNV __vkew_vkGetMemoryRemoteAddressNV = NULL;
static PFN_vkCmdSetPatchControlPointsEXT __vkew_vkCmdSetPatchControlPointsEXT = NULL;
static PFN_vkCmdSetRasterizerDiscardEnableEXT __vkew_vkCmdSetRasterizerDiscardEnableEXT = NULL;
static PFN_vkCmdSetDepthBiasEnableEXT __vkew_vkCmdSetDepthBiasEnableEXT = NULL;
static PFN_vkCmdSetLogicOpEXT __vkew_vkCmdSetLogicOpEXT = NULL;
static PFN_vkCmdSetPrimitiveRestartEnableEXT __vkew_vkCmdSetPrimitiveRestartEnableEXT = NULL;
static PFN_vkCmdSetColorWriteEnableEXT __vkew_vkCmdSetColorWriteEnableEXT = NULL;
static PFN_vkCmdDrawMultiEXT __vkew_vkCmdDrawMultiEXT = NULL;
static PFN_vkCmdDrawMultiIndexedEXT __vkew_vkCmdDrawMultiIndexedEXT = NULL;
static PFN_vkSetDeviceMemoryPriorityEXT __vkew_vkSetDeviceMemoryPriorityEXT = NULL;
static PFN_vkGetDeviceBufferMemoryRequirementsKHR __vkew_vkGetDeviceBufferMemoryRequirementsKHR = NULL;
static PFN_vkGetDeviceImageMemoryRequirementsKHR __vkew_vkGetDeviceImageMemoryRequirementsKHR = NULL;
static PFN_vkGetDeviceImageSparseMemoryRequirementsKHR __vkew_vkGetDeviceImageSparseMemoryRequirementsKHR = NULL;
#ifdef VK_USE_PLATFORM_ANDROID
	static PFN_vkGetAndroidHardwareBufferPropertiesANDROID __vkew_vkGetAndroidHardwareBufferPropertiesANDROID = NULL;
#endif //android
#ifdef VK_USE_PLATFORM_ANDROID
	static PFN_vkGetMemoryAndroidHardwareBufferANDROID __vkew_vkGetMemoryAndroidHardwareBufferANDROID = NULL;
#endif //android
#ifdef VK_USE_PLATFORM_WIN32
	static PFN_vkGetMemoryWin32HandleNV __vkew_vkGetMemoryWin32HandleNV = NULL;
#endif //win32
#ifdef VK_USE_PLATFORM_WIN32
	static PFN_vkGetMemoryWin32HandleKHR __vkew_vkGetMemoryWin32HandleKHR = NULL;
#endif //win32
#ifdef VK_USE_PLATFORM_WIN32
	static PFN_vkGetMemoryWin32HandlePropertiesKHR __vkew_vkGetMemoryWin32HandlePropertiesKHR = NULL;
#endif //win32
#ifdef VK_USE_PLATFORM_WIN32
	static PFN_vkImportSemaphoreWin32HandleKHR __vkew_vkImportSemaphoreWin32HandleKHR = NULL;
#endif //win32
#ifdef VK_USE_PLATFORM_WIN32
	static PFN_vkGetSemaphoreWin32HandleKHR __vkew_vkGetSemaphoreWin32HandleKHR = NULL;
#endif //win32
#ifdef VK_USE_PLATFORM_WIN32
	static PFN_vkImportFenceWin32HandleKHR __vkew_vkImportFenceWin32HandleKHR = NULL;
#endif //win32
#ifdef VK_USE_PLATFORM_WIN32
	static PFN_vkGetFenceWin32HandleKHR __vkew_vkGetFenceWin32HandleKHR = NULL;
#endif //win32
#ifdef VK_USE_PLATFORM_WIN32
	static PFN_vkGetPhysicalDeviceSurfacePresentModes2EXT __vkew_vkGetPhysicalDeviceSurfacePresentModes2EXT = NULL;
#endif //win32
#ifdef VK_USE_PLATFORM_WIN32
	static PFN_vkAcquireFullScreenExclusiveModeEXT __vkew_vkAcquireFullScreenExclusiveModeEXT = NULL;
#endif //win32
#ifdef VK_USE_PLATFORM_WIN32
	static PFN_vkReleaseFullScreenExclusiveModeEXT __vkew_vkReleaseFullScreenExclusiveModeEXT = NULL;
#endif //win32
#ifdef VK_USE_PLATFORM_WIN32
	static PFN_vkAcquireWinrtDisplayNV __vkew_vkAcquireWinrtDisplayNV = NULL;
#endif //win32
#ifdef VK_USE_PLATFORM_WIN32
	static PFN_vkGetWinrtDisplayNV __vkew_vkGetWinrtDisplayNV = NULL;
#endif //win32
#ifdef VK_USE_PLATFORM_PROVISIONAL
	static PFN_vkGetPhysicalDeviceVideoCapabilitiesKHR __vkew_vkGetPhysicalDeviceVideoCapabilitiesKHR = NULL;
#endif //provisional
#ifdef VK_USE_PLATFORM_PROVISIONAL
	static PFN_vkGetPhysicalDeviceVideoFormatPropertiesKHR __vkew_vkGetPhysicalDeviceVideoFormatPropertiesKHR = NULL;
#endif //provisional
#ifdef VK_USE_PLATFORM_PROVISIONAL
	static PFN_vkCreateVideoSessionKHR __vkew_vkCreateVideoSessionKHR = NULL;
#endif //provisional
#ifdef VK_USE_PLATFORM_PROVISIONAL
	static PFN_vkDestroyVideoSessionKHR __vkew_vkDestroyVideoSessionKHR = NULL;
#endif //provisional
#ifdef VK_USE_PLATFORM_PROVISIONAL
	static PFN_vkGetVideoSessionMemoryRequirementsKHR __vkew_vkGetVideoSessionMemoryRequirementsKHR = NULL;
#endif //provisional
#ifdef VK_USE_PLATFORM_PROVISIONAL
	static PFN_vkBindVideoSessionMemoryKHR __vkew_vkBindVideoSessionMemoryKHR = NULL;
#endif //provisional
#ifdef VK_USE_PLATFORM_PROVISIONAL
	static PFN_vkCreateVideoSessionParametersKHR __vkew_vkCreateVideoSessionParametersKHR = NULL;
#endif //provisional
#ifdef VK_USE_PLATFORM_PROVISIONAL
	static PFN_vkUpdateVideoSessionParametersKHR __vkew_vkUpdateVideoSessionParametersKHR = NULL;
#endif //provisional
#ifdef VK_USE_PLATFORM_PROVISIONAL
	static PFN_vkDestroyVideoSessionParametersKHR __vkew_vkDestroyVideoSessionParametersKHR = NULL;
#endif //provisional
#ifdef VK_USE_PLATFORM_PROVISIONAL
	static PFN_vkCmdBeginVideoCodingKHR __vkew_vkCmdBeginVideoCodingKHR = NULL;
#endif //provisional
#ifdef VK_USE_PLATFORM_PROVISIONAL
	static PFN_vkCmdEndVideoCodingKHR __vkew_vkCmdEndVideoCodingKHR = NULL;
#endif //provisional
#ifdef VK_USE_PLATFORM_PROVISIONAL
	static PFN_vkCmdControlVideoCodingKHR __vkew_vkCmdControlVideoCodingKHR = NULL;
#endif //provisional
#ifdef VK_USE_PLATFORM_PROVISIONAL
	static PFN_vkCmdDecodeVideoKHR __vkew_vkCmdDecodeVideoKHR = NULL;
#endif //provisional
#ifdef VK_USE_PLATFORM_PROVISIONAL
	static PFN_vkCmdEncodeVideoKHR __vkew_vkCmdEncodeVideoKHR = NULL;
#endif //provisional
#ifdef VK_USE_PLATFORM_FUCHSIA
	static PFN_vkGetMemoryZirconHandleFUCHSIA __vkew_vkGetMemoryZirconHandleFUCHSIA = NULL;
#endif //fuchsia
#ifdef VK_USE_PLATFORM_FUCHSIA
	static PFN_vkGetMemoryZirconHandlePropertiesFUCHSIA __vkew_vkGetMemoryZirconHandlePropertiesFUCHSIA = NULL;
#endif //fuchsia
#ifdef VK_USE_PLATFORM_FUCHSIA
	static PFN_vkImportSemaphoreZirconHandleFUCHSIA __vkew_vkImportSemaphoreZirconHandleFUCHSIA = NULL;
#endif //fuchsia
#ifdef VK_USE_PLATFORM_FUCHSIA
	static PFN_vkGetSemaphoreZirconHandleFUCHSIA __vkew_vkGetSemaphoreZirconHandleFUCHSIA = NULL;
#endif //fuchsia
#ifdef VK_USE_PLATFORM_FUCHSIA
	static PFN_vkCreateBufferCollectionFUCHSIA __vkew_vkCreateBufferCollectionFUCHSIA = NULL;
#endif //fuchsia
#ifdef VK_USE_PLATFORM_FUCHSIA
	static PFN_vkSetBufferCollectionImageConstraintsFUCHSIA __vkew_vkSetBufferCollectionImageConstraintsFUCHSIA = NULL;
#endif //fuchsia
#ifdef VK_USE_PLATFORM_FUCHSIA
	static PFN_vkSetBufferCollectionBufferConstraintsFUCHSIA __vkew_vkSetBufferCollectionBufferConstraintsFUCHSIA = NULL;
#endif //fuchsia
#ifdef VK_USE_PLATFORM_FUCHSIA
	static PFN_vkDestroyBufferCollectionFUCHSIA __vkew_vkDestroyBufferCollectionFUCHSIA = NULL;
#endif //fuchsia
#ifdef VK_USE_PLATFORM_FUCHSIA
	static PFN_vkGetBufferCollectionPropertiesFUCHSIA __vkew_vkGetBufferCollectionPropertiesFUCHSIA = NULL;
#endif //fuchsia


/// Initialize VKEW. Will load all function pointers accessible via the Vulkan instance.
/// \param instance A validly created Vulkan instance
/// \returns VK_TRUE if the wrangling of extension fucntion pointers was successful.
static void vkewInitInstance(VkInstance instance)
{
	// Vulkan
	__vkew_vkDestroySurfaceKHR = (PFN_vkDestroySurfaceKHR) vkGetInstanceProcAddr(instance, "vkDestroySurfaceKHR" );
	__vkew_vkGetPhysicalDeviceSurfaceSupportKHR = (PFN_vkGetPhysicalDeviceSurfaceSupportKHR) vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceSurfaceSupportKHR" );
	__vkew_vkGetPhysicalDeviceSurfaceCapabilitiesKHR = (PFN_vkGetPhysicalDeviceSurfaceCapabilitiesKHR) vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceSurfaceCapabilitiesKHR" );
	__vkew_vkGetPhysicalDeviceSurfaceFormatsKHR = (PFN_vkGetPhysicalDeviceSurfaceFormatsKHR) vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceSurfaceFormatsKHR" );
	__vkew_vkGetPhysicalDeviceSurfacePresentModesKHR = (PFN_vkGetPhysicalDeviceSurfacePresentModesKHR) vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceSurfacePresentModesKHR" );
	__vkew_vkGetPhysicalDeviceDisplayPropertiesKHR = (PFN_vkGetPhysicalDeviceDisplayPropertiesKHR) vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceDisplayPropertiesKHR" );
	__vkew_vkGetPhysicalDeviceDisplayPlanePropertiesKHR = (PFN_vkGetPhysicalDeviceDisplayPlanePropertiesKHR) vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceDisplayPlanePropertiesKHR" );
	__vkew_vkGetDisplayPlaneSupportedDisplaysKHR = (PFN_vkGetDisplayPlaneSupportedDisplaysKHR) vkGetInstanceProcAddr(instance, "vkGetDisplayPlaneSupportedDisplaysKHR" );
	__vkew_vkGetDisplayModePropertiesKHR = (PFN_vkGetDisplayModePropertiesKHR) vkGetInstanceProcAddr(instance, "vkGetDisplayModePropertiesKHR" );
	__vkew_vkCreateDisplayModeKHR = (PFN_vkCreateDisplayModeKHR) vkGetInstanceProcAddr(instance, "vkCreateDisplayModeKHR" );
	__vkew_vkGetDisplayPlaneCapabilitiesKHR = (PFN_vkGetDisplayPlaneCapabilitiesKHR) vkGetInstanceProcAddr(instance, "vkGetDisplayPlaneCapabilitiesKHR" );
	__vkew_vkCreateDisplayPlaneSurfaceKHR = (PFN_vkCreateDisplayPlaneSurfaceKHR) vkGetInstanceProcAddr(instance, "vkCreateDisplayPlaneSurfaceKHR" );
	__vkew_vkCreateDebugReportCallbackEXT = (PFN_vkCreateDebugReportCallbackEXT) vkGetInstanceProcAddr(instance, "vkCreateDebugReportCallbackEXT" );
	__vkew_vkDestroyDebugReportCallbackEXT = (PFN_vkDestroyDebugReportCallbackEXT) vkGetInstanceProcAddr(instance, "vkDestroyDebugReportCallbackEXT" );
	__vkew_vkDebugReportMessageEXT = (PFN_vkDebugReportMessageEXT) vkGetInstanceProcAddr(instance, "vkDebugReportMessageEXT" );
	__vkew_vkGetPhysicalDeviceExternalImageFormatPropertiesNV = (PFN_vkGetPhysicalDeviceExternalImageFormatPropertiesNV) vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceExternalImageFormatPropertiesNV" );
	__vkew_vkGetPhysicalDeviceFeatures2KHR = (PFN_vkGetPhysicalDeviceFeatures2KHR) vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceFeatures2KHR" );
	__vkew_vkGetPhysicalDeviceProperties2KHR = (PFN_vkGetPhysicalDeviceProperties2KHR) vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceProperties2KHR" );
	__vkew_vkGetPhysicalDeviceFormatProperties2KHR = (PFN_vkGetPhysicalDeviceFormatProperties2KHR) vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceFormatProperties2KHR" );
	__vkew_vkGetPhysicalDeviceImageFormatProperties2KHR = (PFN_vkGetPhysicalDeviceImageFormatProperties2KHR) vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceImageFormatProperties2KHR" );
	__vkew_vkGetPhysicalDeviceQueueFamilyProperties2KHR = (PFN_vkGetPhysicalDeviceQueueFamilyProperties2KHR) vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceQueueFamilyProperties2KHR" );
	__vkew_vkGetPhysicalDeviceMemoryProperties2KHR = (PFN_vkGetPhysicalDeviceMemoryProperties2KHR) vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceMemoryProperties2KHR" );
	__vkew_vkGetPhysicalDeviceSparseImageFormatProperties2KHR = (PFN_vkGetPhysicalDeviceSparseImageFormatProperties2KHR) vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceSparseImageFormatProperties2KHR" );
	__vkew_vkEnumeratePhysicalDeviceGroupsKHR = (PFN_vkEnumeratePhysicalDeviceGroupsKHR) vkGetInstanceProcAddr(instance, "vkEnumeratePhysicalDeviceGroupsKHR" );
	__vkew_vkGetPhysicalDeviceExternalBufferPropertiesKHR = (PFN_vkGetPhysicalDeviceExternalBufferPropertiesKHR) vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceExternalBufferPropertiesKHR" );
	__vkew_vkGetPhysicalDeviceExternalSemaphorePropertiesKHR = (PFN_vkGetPhysicalDeviceExternalSemaphorePropertiesKHR) vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceExternalSemaphorePropertiesKHR" );
	__vkew_vkReleaseDisplayEXT = (PFN_vkReleaseDisplayEXT) vkGetInstanceProcAddr(instance, "vkReleaseDisplayEXT" );
	__vkew_vkGetPhysicalDeviceSurfaceCapabilities2EXT = (PFN_vkGetPhysicalDeviceSurfaceCapabilities2EXT) vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceSurfaceCapabilities2EXT" );
	__vkew_vkGetPhysicalDeviceExternalFencePropertiesKHR = (PFN_vkGetPhysicalDeviceExternalFencePropertiesKHR) vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceExternalFencePropertiesKHR" );
	__vkew_vkGetPhysicalDeviceSurfaceCapabilities2KHR = (PFN_vkGetPhysicalDeviceSurfaceCapabilities2KHR) vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceSurfaceCapabilities2KHR" );
	__vkew_vkGetPhysicalDeviceSurfaceFormats2KHR = (PFN_vkGetPhysicalDeviceSurfaceFormats2KHR) vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceSurfaceFormats2KHR" );
	__vkew_vkGetPhysicalDeviceDisplayProperties2KHR = (PFN_vkGetPhysicalDeviceDisplayProperties2KHR) vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceDisplayProperties2KHR" );
	__vkew_vkGetPhysicalDeviceDisplayPlaneProperties2KHR = (PFN_vkGetPhysicalDeviceDisplayPlaneProperties2KHR) vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceDisplayPlaneProperties2KHR" );
	__vkew_vkGetDisplayModeProperties2KHR = (PFN_vkGetDisplayModeProperties2KHR) vkGetInstanceProcAddr(instance, "vkGetDisplayModeProperties2KHR" );
	__vkew_vkGetDisplayPlaneCapabilities2KHR = (PFN_vkGetDisplayPlaneCapabilities2KHR) vkGetInstanceProcAddr(instance, "vkGetDisplayPlaneCapabilities2KHR" );
	__vkew_vkSetDebugUtilsObjectNameEXT = (PFN_vkSetDebugUtilsObjectNameEXT) vkGetInstanceProcAddr(instance, "vkSetDebugUtilsObjectNameEXT" );
	__vkew_vkSetDebugUtilsObjectTagEXT = (PFN_vkSetDebugUtilsObjectTagEXT) vkGetInstanceProcAddr(instance, "vkSetDebugUtilsObjectTagEXT" );
	__vkew_vkQueueBeginDebugUtilsLabelEXT = (PFN_vkQueueBeginDebugUtilsLabelEXT) vkGetInstanceProcAddr(instance, "vkQueueBeginDebugUtilsLabelEXT" );
	__vkew_vkQueueEndDebugUtilsLabelEXT = (PFN_vkQueueEndDebugUtilsLabelEXT) vkGetInstanceProcAddr(instance, "vkQueueEndDebugUtilsLabelEXT" );
	__vkew_vkQueueInsertDebugUtilsLabelEXT = (PFN_vkQueueInsertDebugUtilsLabelEXT) vkGetInstanceProcAddr(instance, "vkQueueInsertDebugUtilsLabelEXT" );
	__vkew_vkCmdBeginDebugUtilsLabelEXT = (PFN_vkCmdBeginDebugUtilsLabelEXT) vkGetInstanceProcAddr(instance, "vkCmdBeginDebugUtilsLabelEXT" );
	__vkew_vkCmdEndDebugUtilsLabelEXT = (PFN_vkCmdEndDebugUtilsLabelEXT) vkGetInstanceProcAddr(instance, "vkCmdEndDebugUtilsLabelEXT" );
	__vkew_vkCmdInsertDebugUtilsLabelEXT = (PFN_vkCmdInsertDebugUtilsLabelEXT) vkGetInstanceProcAddr(instance, "vkCmdInsertDebugUtilsLabelEXT" );
	__vkew_vkCreateDebugUtilsMessengerEXT = (PFN_vkCreateDebugUtilsMessengerEXT) vkGetInstanceProcAddr(instance, "vkCreateDebugUtilsMessengerEXT" );
	__vkew_vkDestroyDebugUtilsMessengerEXT = (PFN_vkDestroyDebugUtilsMessengerEXT) vkGetInstanceProcAddr(instance, "vkDestroyDebugUtilsMessengerEXT" );
	__vkew_vkSubmitDebugUtilsMessageEXT = (PFN_vkSubmitDebugUtilsMessageEXT) vkGetInstanceProcAddr(instance, "vkSubmitDebugUtilsMessageEXT" );
	__vkew_vkCreateHeadlessSurfaceEXT = (PFN_vkCreateHeadlessSurfaceEXT) vkGetInstanceProcAddr(instance, "vkCreateHeadlessSurfaceEXT" );
	__vkew_vkAcquireDrmDisplayEXT = (PFN_vkAcquireDrmDisplayEXT) vkGetInstanceProcAddr(instance, "vkAcquireDrmDisplayEXT" );
	__vkew_vkGetDrmDisplayEXT = (PFN_vkGetDrmDisplayEXT) vkGetInstanceProcAddr(instance, "vkGetDrmDisplayEXT" );
	#ifdef VK_USE_PLATFORM_XLIB
		__vkew_vkCreateXlibSurfaceKHR = (PFN_vkCreateXlibSurfaceKHR) vkGetInstanceProcAddr(instance, "vkCreateXlibSurfaceKHR" );
	#endif //xlib
	#ifdef VK_USE_PLATFORM_XLIB
		__vkew_vkGetPhysicalDeviceXlibPresentationSupportKHR = (PFN_vkGetPhysicalDeviceXlibPresentationSupportKHR) vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceXlibPresentationSupportKHR" );
	#endif //xlib
	#ifdef VK_USE_PLATFORM_XCB
		__vkew_vkCreateXcbSurfaceKHR = (PFN_vkCreateXcbSurfaceKHR) vkGetInstanceProcAddr(instance, "vkCreateXcbSurfaceKHR" );
	#endif //xcb
	#ifdef VK_USE_PLATFORM_XCB
		__vkew_vkGetPhysicalDeviceXcbPresentationSupportKHR = (PFN_vkGetPhysicalDeviceXcbPresentationSupportKHR) vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceXcbPresentationSupportKHR" );
	#endif //xcb
	#ifdef VK_USE_PLATFORM_WAYLAND
		__vkew_vkCreateWaylandSurfaceKHR = (PFN_vkCreateWaylandSurfaceKHR) vkGetInstanceProcAddr(instance, "vkCreateWaylandSurfaceKHR" );
	#endif //wayland
	#ifdef VK_USE_PLATFORM_WAYLAND
		__vkew_vkGetPhysicalDeviceWaylandPresentationSupportKHR = (PFN_vkGetPhysicalDeviceWaylandPresentationSupportKHR) vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceWaylandPresentationSupportKHR" );
	#endif //wayland
	#ifdef VK_USE_PLATFORM_ANDROID
		__vkew_vkCreateAndroidSurfaceKHR = (PFN_vkCreateAndroidSurfaceKHR) vkGetInstanceProcAddr(instance, "vkCreateAndroidSurfaceKHR" );
	#endif //android
	#ifdef VK_USE_PLATFORM_WIN32
		__vkew_vkCreateWin32SurfaceKHR = (PFN_vkCreateWin32SurfaceKHR) vkGetInstanceProcAddr(instance, "vkCreateWin32SurfaceKHR" );
	#endif //win32
	#ifdef VK_USE_PLATFORM_WIN32
		__vkew_vkGetPhysicalDeviceWin32PresentationSupportKHR = (PFN_vkGetPhysicalDeviceWin32PresentationSupportKHR) vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceWin32PresentationSupportKHR" );
	#endif //win32
	#ifdef VK_USE_PLATFORM_GGP
		__vkew_vkCreateStreamDescriptorSurfaceGGP = (PFN_vkCreateStreamDescriptorSurfaceGGP) vkGetInstanceProcAddr(instance, "vkCreateStreamDescriptorSurfaceGGP" );
	#endif //ggp
	#ifdef VK_USE_PLATFORM_VI
		__vkew_vkCreateViSurfaceNN = (PFN_vkCreateViSurfaceNN) vkGetInstanceProcAddr(instance, "vkCreateViSurfaceNN" );
	#endif //vi
	#ifdef VK_USE_PLATFORM_XLIB_XRANDR
		__vkew_vkAcquireXlibDisplayEXT = (PFN_vkAcquireXlibDisplayEXT) vkGetInstanceProcAddr(instance, "vkAcquireXlibDisplayEXT" );
	#endif //xlib_xrandr
	#ifdef VK_USE_PLATFORM_XLIB_XRANDR
		__vkew_vkGetRandROutputDisplayEXT = (PFN_vkGetRandROutputDisplayEXT) vkGetInstanceProcAddr(instance, "vkGetRandROutputDisplayEXT" );
	#endif //xlib_xrandr
	#ifdef VK_USE_PLATFORM_IOS
		__vkew_vkCreateIOSSurfaceMVK = (PFN_vkCreateIOSSurfaceMVK) vkGetInstanceProcAddr(instance, "vkCreateIOSSurfaceMVK" );
	#endif //ios
	#ifdef VK_USE_PLATFORM_MACOS
		__vkew_vkCreateMacOSSurfaceMVK = (PFN_vkCreateMacOSSurfaceMVK) vkGetInstanceProcAddr(instance, "vkCreateMacOSSurfaceMVK" );
	#endif //macos
	#ifdef VK_USE_PLATFORM_FUCHSIA
		__vkew_vkCreateImagePipeSurfaceFUCHSIA = (PFN_vkCreateImagePipeSurfaceFUCHSIA) vkGetInstanceProcAddr(instance, "vkCreateImagePipeSurfaceFUCHSIA" );
	#endif //fuchsia
	#ifdef VK_USE_PLATFORM_METAL
		__vkew_vkCreateMetalSurfaceEXT = (PFN_vkCreateMetalSurfaceEXT) vkGetInstanceProcAddr(instance, "vkCreateMetalSurfaceEXT" );
	#endif //metal
	#ifdef VK_USE_PLATFORM_DIRECTFB
		__vkew_vkCreateDirectFBSurfaceEXT = (PFN_vkCreateDirectFBSurfaceEXT) vkGetInstanceProcAddr(instance, "vkCreateDirectFBSurfaceEXT" );
	#endif //directfb
	#ifdef VK_USE_PLATFORM_DIRECTFB
		__vkew_vkGetPhysicalDeviceDirectFBPresentationSupportEXT = (PFN_vkGetPhysicalDeviceDirectFBPresentationSupportEXT) vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceDirectFBPresentationSupportEXT" );
	#endif //directfb
	#ifdef VK_USE_PLATFORM_SCREEN
		__vkew_vkCreateScreenSurfaceQNX = (PFN_vkCreateScreenSurfaceQNX) vkGetInstanceProcAddr(instance, "vkCreateScreenSurfaceQNX" );
	#endif //screen
	#ifdef VK_USE_PLATFORM_SCREEN
		__vkew_vkGetPhysicalDeviceScreenPresentationSupportQNX = (PFN_vkGetPhysicalDeviceScreenPresentationSupportQNX) vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceScreenPresentationSupportQNX" );
	#endif //screen
}


/// Initialize VKEW. Will load all function pointers accessible via the Vulkan device.
/// \param instance A validly created Vulkan device
static void vkewInitDevice(VkDevice device)
{
	// Vulkan
	__vkew_vkCreateSwapchainKHR = (PFN_vkCreateSwapchainKHR) vkGetDeviceProcAddr(device, "vkCreateSwapchainKHR" );
	__vkew_vkDestroySwapchainKHR = (PFN_vkDestroySwapchainKHR) vkGetDeviceProcAddr(device, "vkDestroySwapchainKHR" );
	__vkew_vkGetSwapchainImagesKHR = (PFN_vkGetSwapchainImagesKHR) vkGetDeviceProcAddr(device, "vkGetSwapchainImagesKHR" );
	__vkew_vkAcquireNextImageKHR = (PFN_vkAcquireNextImageKHR) vkGetDeviceProcAddr(device, "vkAcquireNextImageKHR" );
	__vkew_vkQueuePresentKHR = (PFN_vkQueuePresentKHR) vkGetDeviceProcAddr(device, "vkQueuePresentKHR" );
	__vkew_vkCreateSharedSwapchainsKHR = (PFN_vkCreateSharedSwapchainsKHR) vkGetDeviceProcAddr(device, "vkCreateSharedSwapchainsKHR" );
	__vkew_vkDebugMarkerSetObjectTagEXT = (PFN_vkDebugMarkerSetObjectTagEXT) vkGetDeviceProcAddr(device, "vkDebugMarkerSetObjectTagEXT" );
	__vkew_vkDebugMarkerSetObjectNameEXT = (PFN_vkDebugMarkerSetObjectNameEXT) vkGetDeviceProcAddr(device, "vkDebugMarkerSetObjectNameEXT" );
	__vkew_vkCmdDebugMarkerBeginEXT = (PFN_vkCmdDebugMarkerBeginEXT) vkGetDeviceProcAddr(device, "vkCmdDebugMarkerBeginEXT" );
	__vkew_vkCmdDebugMarkerEndEXT = (PFN_vkCmdDebugMarkerEndEXT) vkGetDeviceProcAddr(device, "vkCmdDebugMarkerEndEXT" );
	__vkew_vkCmdDebugMarkerInsertEXT = (PFN_vkCmdDebugMarkerInsertEXT) vkGetDeviceProcAddr(device, "vkCmdDebugMarkerInsertEXT" );
	__vkew_vkCmdBindTransformFeedbackBuffersEXT = (PFN_vkCmdBindTransformFeedbackBuffersEXT) vkGetDeviceProcAddr(device, "vkCmdBindTransformFeedbackBuffersEXT" );
	__vkew_vkCmdBeginTransformFeedbackEXT = (PFN_vkCmdBeginTransformFeedbackEXT) vkGetDeviceProcAddr(device, "vkCmdBeginTransformFeedbackEXT" );
	__vkew_vkCmdEndTransformFeedbackEXT = (PFN_vkCmdEndTransformFeedbackEXT) vkGetDeviceProcAddr(device, "vkCmdEndTransformFeedbackEXT" );
	__vkew_vkCmdBeginQueryIndexedEXT = (PFN_vkCmdBeginQueryIndexedEXT) vkGetDeviceProcAddr(device, "vkCmdBeginQueryIndexedEXT" );
	__vkew_vkCmdEndQueryIndexedEXT = (PFN_vkCmdEndQueryIndexedEXT) vkGetDeviceProcAddr(device, "vkCmdEndQueryIndexedEXT" );
	__vkew_vkCmdDrawIndirectByteCountEXT = (PFN_vkCmdDrawIndirectByteCountEXT) vkGetDeviceProcAddr(device, "vkCmdDrawIndirectByteCountEXT" );
	__vkew_vkCreateCuModuleNVX = (PFN_vkCreateCuModuleNVX) vkGetDeviceProcAddr(device, "vkCreateCuModuleNVX" );
	__vkew_vkCreateCuFunctionNVX = (PFN_vkCreateCuFunctionNVX) vkGetDeviceProcAddr(device, "vkCreateCuFunctionNVX" );
	__vkew_vkDestroyCuModuleNVX = (PFN_vkDestroyCuModuleNVX) vkGetDeviceProcAddr(device, "vkDestroyCuModuleNVX" );
	__vkew_vkDestroyCuFunctionNVX = (PFN_vkDestroyCuFunctionNVX) vkGetDeviceProcAddr(device, "vkDestroyCuFunctionNVX" );
	__vkew_vkCmdCuLaunchKernelNVX = (PFN_vkCmdCuLaunchKernelNVX) vkGetDeviceProcAddr(device, "vkCmdCuLaunchKernelNVX" );
	__vkew_vkGetImageViewHandleNVX = (PFN_vkGetImageViewHandleNVX) vkGetDeviceProcAddr(device, "vkGetImageViewHandleNVX" );
	__vkew_vkGetImageViewAddressNVX = (PFN_vkGetImageViewAddressNVX) vkGetDeviceProcAddr(device, "vkGetImageViewAddressNVX" );
	__vkew_vkCmdDrawIndirectCountAMD = (PFN_vkCmdDrawIndirectCountAMD) vkGetDeviceProcAddr(device, "vkCmdDrawIndirectCountAMD" );
	__vkew_vkCmdDrawIndexedIndirectCountAMD = (PFN_vkCmdDrawIndexedIndirectCountAMD) vkGetDeviceProcAddr(device, "vkCmdDrawIndexedIndirectCountAMD" );
	__vkew_vkGetShaderInfoAMD = (PFN_vkGetShaderInfoAMD) vkGetDeviceProcAddr(device, "vkGetShaderInfoAMD" );
	__vkew_vkCmdBeginRenderingKHR = (PFN_vkCmdBeginRenderingKHR) vkGetDeviceProcAddr(device, "vkCmdBeginRenderingKHR" );
	__vkew_vkCmdEndRenderingKHR = (PFN_vkCmdEndRenderingKHR) vkGetDeviceProcAddr(device, "vkCmdEndRenderingKHR" );
	__vkew_vkGetDeviceGroupPeerMemoryFeaturesKHR = (PFN_vkGetDeviceGroupPeerMemoryFeaturesKHR) vkGetDeviceProcAddr(device, "vkGetDeviceGroupPeerMemoryFeaturesKHR" );
	__vkew_vkCmdSetDeviceMaskKHR = (PFN_vkCmdSetDeviceMaskKHR) vkGetDeviceProcAddr(device, "vkCmdSetDeviceMaskKHR" );
	__vkew_vkCmdDispatchBaseKHR = (PFN_vkCmdDispatchBaseKHR) vkGetDeviceProcAddr(device, "vkCmdDispatchBaseKHR" );
	__vkew_vkTrimCommandPoolKHR = (PFN_vkTrimCommandPoolKHR) vkGetDeviceProcAddr(device, "vkTrimCommandPoolKHR" );
	__vkew_vkGetMemoryFdKHR = (PFN_vkGetMemoryFdKHR) vkGetDeviceProcAddr(device, "vkGetMemoryFdKHR" );
	__vkew_vkGetMemoryFdPropertiesKHR = (PFN_vkGetMemoryFdPropertiesKHR) vkGetDeviceProcAddr(device, "vkGetMemoryFdPropertiesKHR" );
	__vkew_vkImportSemaphoreFdKHR = (PFN_vkImportSemaphoreFdKHR) vkGetDeviceProcAddr(device, "vkImportSemaphoreFdKHR" );
	__vkew_vkGetSemaphoreFdKHR = (PFN_vkGetSemaphoreFdKHR) vkGetDeviceProcAddr(device, "vkGetSemaphoreFdKHR" );
	__vkew_vkCmdPushDescriptorSetKHR = (PFN_vkCmdPushDescriptorSetKHR) vkGetDeviceProcAddr(device, "vkCmdPushDescriptorSetKHR" );
	__vkew_vkCmdBeginConditionalRenderingEXT = (PFN_vkCmdBeginConditionalRenderingEXT) vkGetDeviceProcAddr(device, "vkCmdBeginConditionalRenderingEXT" );
	__vkew_vkCmdEndConditionalRenderingEXT = (PFN_vkCmdEndConditionalRenderingEXT) vkGetDeviceProcAddr(device, "vkCmdEndConditionalRenderingEXT" );
	__vkew_vkCreateDescriptorUpdateTemplateKHR = (PFN_vkCreateDescriptorUpdateTemplateKHR) vkGetDeviceProcAddr(device, "vkCreateDescriptorUpdateTemplateKHR" );
	__vkew_vkDestroyDescriptorUpdateTemplateKHR = (PFN_vkDestroyDescriptorUpdateTemplateKHR) vkGetDeviceProcAddr(device, "vkDestroyDescriptorUpdateTemplateKHR" );
	__vkew_vkUpdateDescriptorSetWithTemplateKHR = (PFN_vkUpdateDescriptorSetWithTemplateKHR) vkGetDeviceProcAddr(device, "vkUpdateDescriptorSetWithTemplateKHR" );
	__vkew_vkCmdSetViewportWScalingNV = (PFN_vkCmdSetViewportWScalingNV) vkGetDeviceProcAddr(device, "vkCmdSetViewportWScalingNV" );
	__vkew_vkDisplayPowerControlEXT = (PFN_vkDisplayPowerControlEXT) vkGetDeviceProcAddr(device, "vkDisplayPowerControlEXT" );
	__vkew_vkRegisterDeviceEventEXT = (PFN_vkRegisterDeviceEventEXT) vkGetDeviceProcAddr(device, "vkRegisterDeviceEventEXT" );
	__vkew_vkRegisterDisplayEventEXT = (PFN_vkRegisterDisplayEventEXT) vkGetDeviceProcAddr(device, "vkRegisterDisplayEventEXT" );
	__vkew_vkGetSwapchainCounterEXT = (PFN_vkGetSwapchainCounterEXT) vkGetDeviceProcAddr(device, "vkGetSwapchainCounterEXT" );
	__vkew_vkGetRefreshCycleDurationGOOGLE = (PFN_vkGetRefreshCycleDurationGOOGLE) vkGetDeviceProcAddr(device, "vkGetRefreshCycleDurationGOOGLE" );
	__vkew_vkGetPastPresentationTimingGOOGLE = (PFN_vkGetPastPresentationTimingGOOGLE) vkGetDeviceProcAddr(device, "vkGetPastPresentationTimingGOOGLE" );
	__vkew_vkCmdSetDiscardRectangleEXT = (PFN_vkCmdSetDiscardRectangleEXT) vkGetDeviceProcAddr(device, "vkCmdSetDiscardRectangleEXT" );
	__vkew_vkSetHdrMetadataEXT = (PFN_vkSetHdrMetadataEXT) vkGetDeviceProcAddr(device, "vkSetHdrMetadataEXT" );
	__vkew_vkCreateRenderPass2KHR = (PFN_vkCreateRenderPass2KHR) vkGetDeviceProcAddr(device, "vkCreateRenderPass2KHR" );
	__vkew_vkCmdBeginRenderPass2KHR = (PFN_vkCmdBeginRenderPass2KHR) vkGetDeviceProcAddr(device, "vkCmdBeginRenderPass2KHR" );
	__vkew_vkCmdNextSubpass2KHR = (PFN_vkCmdNextSubpass2KHR) vkGetDeviceProcAddr(device, "vkCmdNextSubpass2KHR" );
	__vkew_vkCmdEndRenderPass2KHR = (PFN_vkCmdEndRenderPass2KHR) vkGetDeviceProcAddr(device, "vkCmdEndRenderPass2KHR" );
	__vkew_vkGetSwapchainStatusKHR = (PFN_vkGetSwapchainStatusKHR) vkGetDeviceProcAddr(device, "vkGetSwapchainStatusKHR" );
	__vkew_vkImportFenceFdKHR = (PFN_vkImportFenceFdKHR) vkGetDeviceProcAddr(device, "vkImportFenceFdKHR" );
	__vkew_vkGetFenceFdKHR = (PFN_vkGetFenceFdKHR) vkGetDeviceProcAddr(device, "vkGetFenceFdKHR" );
	__vkew_vkEnumeratePhysicalDeviceQueueFamilyPerformanceQueryCountersKHR = (PFN_vkEnumeratePhysicalDeviceQueueFamilyPerformanceQueryCountersKHR) vkGetDeviceProcAddr(device, "vkEnumeratePhysicalDeviceQueueFamilyPerformanceQueryCountersKHR" );
	__vkew_vkGetPhysicalDeviceQueueFamilyPerformanceQueryPassesKHR = (PFN_vkGetPhysicalDeviceQueueFamilyPerformanceQueryPassesKHR) vkGetDeviceProcAddr(device, "vkGetPhysicalDeviceQueueFamilyPerformanceQueryPassesKHR" );
	__vkew_vkAcquireProfilingLockKHR = (PFN_vkAcquireProfilingLockKHR) vkGetDeviceProcAddr(device, "vkAcquireProfilingLockKHR" );
	__vkew_vkReleaseProfilingLockKHR = (PFN_vkReleaseProfilingLockKHR) vkGetDeviceProcAddr(device, "vkReleaseProfilingLockKHR" );
	__vkew_vkCmdSetSampleLocationsEXT = (PFN_vkCmdSetSampleLocationsEXT) vkGetDeviceProcAddr(device, "vkCmdSetSampleLocationsEXT" );
	__vkew_vkGetPhysicalDeviceMultisamplePropertiesEXT = (PFN_vkGetPhysicalDeviceMultisamplePropertiesEXT) vkGetDeviceProcAddr(device, "vkGetPhysicalDeviceMultisamplePropertiesEXT" );
	__vkew_vkGetImageMemoryRequirements2KHR = (PFN_vkGetImageMemoryRequirements2KHR) vkGetDeviceProcAddr(device, "vkGetImageMemoryRequirements2KHR" );
	__vkew_vkGetBufferMemoryRequirements2KHR = (PFN_vkGetBufferMemoryRequirements2KHR) vkGetDeviceProcAddr(device, "vkGetBufferMemoryRequirements2KHR" );
	__vkew_vkGetImageSparseMemoryRequirements2KHR = (PFN_vkGetImageSparseMemoryRequirements2KHR) vkGetDeviceProcAddr(device, "vkGetImageSparseMemoryRequirements2KHR" );
	__vkew_vkCreateAccelerationStructureKHR = (PFN_vkCreateAccelerationStructureKHR) vkGetDeviceProcAddr(device, "vkCreateAccelerationStructureKHR" );
	__vkew_vkDestroyAccelerationStructureKHR = (PFN_vkDestroyAccelerationStructureKHR) vkGetDeviceProcAddr(device, "vkDestroyAccelerationStructureKHR" );
	__vkew_vkCmdBuildAccelerationStructuresKHR = (PFN_vkCmdBuildAccelerationStructuresKHR) vkGetDeviceProcAddr(device, "vkCmdBuildAccelerationStructuresKHR" );
	__vkew_vkCmdBuildAccelerationStructuresIndirectKHR = (PFN_vkCmdBuildAccelerationStructuresIndirectKHR) vkGetDeviceProcAddr(device, "vkCmdBuildAccelerationStructuresIndirectKHR" );
	__vkew_vkBuildAccelerationStructuresKHR = (PFN_vkBuildAccelerationStructuresKHR) vkGetDeviceProcAddr(device, "vkBuildAccelerationStructuresKHR" );
	__vkew_vkCopyAccelerationStructureKHR = (PFN_vkCopyAccelerationStructureKHR) vkGetDeviceProcAddr(device, "vkCopyAccelerationStructureKHR" );
	__vkew_vkCopyAccelerationStructureToMemoryKHR = (PFN_vkCopyAccelerationStructureToMemoryKHR) vkGetDeviceProcAddr(device, "vkCopyAccelerationStructureToMemoryKHR" );
	__vkew_vkCopyMemoryToAccelerationStructureKHR = (PFN_vkCopyMemoryToAccelerationStructureKHR) vkGetDeviceProcAddr(device, "vkCopyMemoryToAccelerationStructureKHR" );
	__vkew_vkWriteAccelerationStructuresPropertiesKHR = (PFN_vkWriteAccelerationStructuresPropertiesKHR) vkGetDeviceProcAddr(device, "vkWriteAccelerationStructuresPropertiesKHR" );
	__vkew_vkCmdCopyAccelerationStructureKHR = (PFN_vkCmdCopyAccelerationStructureKHR) vkGetDeviceProcAddr(device, "vkCmdCopyAccelerationStructureKHR" );
	__vkew_vkCmdCopyAccelerationStructureToMemoryKHR = (PFN_vkCmdCopyAccelerationStructureToMemoryKHR) vkGetDeviceProcAddr(device, "vkCmdCopyAccelerationStructureToMemoryKHR" );
	__vkew_vkCmdCopyMemoryToAccelerationStructureKHR = (PFN_vkCmdCopyMemoryToAccelerationStructureKHR) vkGetDeviceProcAddr(device, "vkCmdCopyMemoryToAccelerationStructureKHR" );
	__vkew_vkGetAccelerationStructureDeviceAddressKHR = (PFN_vkGetAccelerationStructureDeviceAddressKHR) vkGetDeviceProcAddr(device, "vkGetAccelerationStructureDeviceAddressKHR" );
	__vkew_vkCmdWriteAccelerationStructuresPropertiesKHR = (PFN_vkCmdWriteAccelerationStructuresPropertiesKHR) vkGetDeviceProcAddr(device, "vkCmdWriteAccelerationStructuresPropertiesKHR" );
	__vkew_vkGetDeviceAccelerationStructureCompatibilityKHR = (PFN_vkGetDeviceAccelerationStructureCompatibilityKHR) vkGetDeviceProcAddr(device, "vkGetDeviceAccelerationStructureCompatibilityKHR" );
	__vkew_vkGetAccelerationStructureBuildSizesKHR = (PFN_vkGetAccelerationStructureBuildSizesKHR) vkGetDeviceProcAddr(device, "vkGetAccelerationStructureBuildSizesKHR" );
	__vkew_vkCmdTraceRaysKHR = (PFN_vkCmdTraceRaysKHR) vkGetDeviceProcAddr(device, "vkCmdTraceRaysKHR" );
	__vkew_vkCreateRayTracingPipelinesKHR = (PFN_vkCreateRayTracingPipelinesKHR) vkGetDeviceProcAddr(device, "vkCreateRayTracingPipelinesKHR" );
	__vkew_vkGetRayTracingShaderGroupHandlesKHR = (PFN_vkGetRayTracingShaderGroupHandlesKHR) vkGetDeviceProcAddr(device, "vkGetRayTracingShaderGroupHandlesKHR" );
	__vkew_vkGetRayTracingCaptureReplayShaderGroupHandlesKHR = (PFN_vkGetRayTracingCaptureReplayShaderGroupHandlesKHR) vkGetDeviceProcAddr(device, "vkGetRayTracingCaptureReplayShaderGroupHandlesKHR" );
	__vkew_vkCmdTraceRaysIndirectKHR = (PFN_vkCmdTraceRaysIndirectKHR) vkGetDeviceProcAddr(device, "vkCmdTraceRaysIndirectKHR" );
	__vkew_vkGetRayTracingShaderGroupStackSizeKHR = (PFN_vkGetRayTracingShaderGroupStackSizeKHR) vkGetDeviceProcAddr(device, "vkGetRayTracingShaderGroupStackSizeKHR" );
	__vkew_vkCmdSetRayTracingPipelineStackSizeKHR = (PFN_vkCmdSetRayTracingPipelineStackSizeKHR) vkGetDeviceProcAddr(device, "vkCmdSetRayTracingPipelineStackSizeKHR" );
	__vkew_vkCreateSamplerYcbcrConversionKHR = (PFN_vkCreateSamplerYcbcrConversionKHR) vkGetDeviceProcAddr(device, "vkCreateSamplerYcbcrConversionKHR" );
	__vkew_vkDestroySamplerYcbcrConversionKHR = (PFN_vkDestroySamplerYcbcrConversionKHR) vkGetDeviceProcAddr(device, "vkDestroySamplerYcbcrConversionKHR" );
	__vkew_vkBindBufferMemory2KHR = (PFN_vkBindBufferMemory2KHR) vkGetDeviceProcAddr(device, "vkBindBufferMemory2KHR" );
	__vkew_vkBindImageMemory2KHR = (PFN_vkBindImageMemory2KHR) vkGetDeviceProcAddr(device, "vkBindImageMemory2KHR" );
	__vkew_vkGetImageDrmFormatModifierPropertiesEXT = (PFN_vkGetImageDrmFormatModifierPropertiesEXT) vkGetDeviceProcAddr(device, "vkGetImageDrmFormatModifierPropertiesEXT" );
	__vkew_vkCreateValidationCacheEXT = (PFN_vkCreateValidationCacheEXT) vkGetDeviceProcAddr(device, "vkCreateValidationCacheEXT" );
	__vkew_vkDestroyValidationCacheEXT = (PFN_vkDestroyValidationCacheEXT) vkGetDeviceProcAddr(device, "vkDestroyValidationCacheEXT" );
	__vkew_vkMergeValidationCachesEXT = (PFN_vkMergeValidationCachesEXT) vkGetDeviceProcAddr(device, "vkMergeValidationCachesEXT" );
	__vkew_vkGetValidationCacheDataEXT = (PFN_vkGetValidationCacheDataEXT) vkGetDeviceProcAddr(device, "vkGetValidationCacheDataEXT" );
	__vkew_vkCmdBindShadingRateImageNV = (PFN_vkCmdBindShadingRateImageNV) vkGetDeviceProcAddr(device, "vkCmdBindShadingRateImageNV" );
	__vkew_vkCmdSetViewportShadingRatePaletteNV = (PFN_vkCmdSetViewportShadingRatePaletteNV) vkGetDeviceProcAddr(device, "vkCmdSetViewportShadingRatePaletteNV" );
	__vkew_vkCmdSetCoarseSampleOrderNV = (PFN_vkCmdSetCoarseSampleOrderNV) vkGetDeviceProcAddr(device, "vkCmdSetCoarseSampleOrderNV" );
	__vkew_vkCreateAccelerationStructureNV = (PFN_vkCreateAccelerationStructureNV) vkGetDeviceProcAddr(device, "vkCreateAccelerationStructureNV" );
	__vkew_vkDestroyAccelerationStructureNV = (PFN_vkDestroyAccelerationStructureNV) vkGetDeviceProcAddr(device, "vkDestroyAccelerationStructureNV" );
	__vkew_vkGetAccelerationStructureMemoryRequirementsNV = (PFN_vkGetAccelerationStructureMemoryRequirementsNV) vkGetDeviceProcAddr(device, "vkGetAccelerationStructureMemoryRequirementsNV" );
	__vkew_vkBindAccelerationStructureMemoryNV = (PFN_vkBindAccelerationStructureMemoryNV) vkGetDeviceProcAddr(device, "vkBindAccelerationStructureMemoryNV" );
	__vkew_vkCmdBuildAccelerationStructureNV = (PFN_vkCmdBuildAccelerationStructureNV) vkGetDeviceProcAddr(device, "vkCmdBuildAccelerationStructureNV" );
	__vkew_vkCmdCopyAccelerationStructureNV = (PFN_vkCmdCopyAccelerationStructureNV) vkGetDeviceProcAddr(device, "vkCmdCopyAccelerationStructureNV" );
	__vkew_vkCmdTraceRaysNV = (PFN_vkCmdTraceRaysNV) vkGetDeviceProcAddr(device, "vkCmdTraceRaysNV" );
	__vkew_vkCreateRayTracingPipelinesNV = (PFN_vkCreateRayTracingPipelinesNV) vkGetDeviceProcAddr(device, "vkCreateRayTracingPipelinesNV" );
	__vkew_vkGetRayTracingShaderGroupHandlesNV = (PFN_vkGetRayTracingShaderGroupHandlesNV) vkGetDeviceProcAddr(device, "vkGetRayTracingShaderGroupHandlesNV" );
	__vkew_vkGetAccelerationStructureHandleNV = (PFN_vkGetAccelerationStructureHandleNV) vkGetDeviceProcAddr(device, "vkGetAccelerationStructureHandleNV" );
	__vkew_vkCmdWriteAccelerationStructuresPropertiesNV = (PFN_vkCmdWriteAccelerationStructuresPropertiesNV) vkGetDeviceProcAddr(device, "vkCmdWriteAccelerationStructuresPropertiesNV" );
	__vkew_vkCompileDeferredNV = (PFN_vkCompileDeferredNV) vkGetDeviceProcAddr(device, "vkCompileDeferredNV" );
	__vkew_vkGetDescriptorSetLayoutSupportKHR = (PFN_vkGetDescriptorSetLayoutSupportKHR) vkGetDeviceProcAddr(device, "vkGetDescriptorSetLayoutSupportKHR" );
	__vkew_vkCmdDrawIndirectCountKHR = (PFN_vkCmdDrawIndirectCountKHR) vkGetDeviceProcAddr(device, "vkCmdDrawIndirectCountKHR" );
	__vkew_vkCmdDrawIndexedIndirectCountKHR = (PFN_vkCmdDrawIndexedIndirectCountKHR) vkGetDeviceProcAddr(device, "vkCmdDrawIndexedIndirectCountKHR" );
	__vkew_vkGetMemoryHostPointerPropertiesEXT = (PFN_vkGetMemoryHostPointerPropertiesEXT) vkGetDeviceProcAddr(device, "vkGetMemoryHostPointerPropertiesEXT" );
	__vkew_vkCmdWriteBufferMarkerAMD = (PFN_vkCmdWriteBufferMarkerAMD) vkGetDeviceProcAddr(device, "vkCmdWriteBufferMarkerAMD" );
	__vkew_vkGetPhysicalDeviceCalibrateableTimeDomainsEXT = (PFN_vkGetPhysicalDeviceCalibrateableTimeDomainsEXT) vkGetDeviceProcAddr(device, "vkGetPhysicalDeviceCalibrateableTimeDomainsEXT" );
	__vkew_vkGetCalibratedTimestampsEXT = (PFN_vkGetCalibratedTimestampsEXT) vkGetDeviceProcAddr(device, "vkGetCalibratedTimestampsEXT" );
	__vkew_vkCmdDrawMeshTasksNV = (PFN_vkCmdDrawMeshTasksNV) vkGetDeviceProcAddr(device, "vkCmdDrawMeshTasksNV" );
	__vkew_vkCmdDrawMeshTasksIndirectNV = (PFN_vkCmdDrawMeshTasksIndirectNV) vkGetDeviceProcAddr(device, "vkCmdDrawMeshTasksIndirectNV" );
	__vkew_vkCmdDrawMeshTasksIndirectCountNV = (PFN_vkCmdDrawMeshTasksIndirectCountNV) vkGetDeviceProcAddr(device, "vkCmdDrawMeshTasksIndirectCountNV" );
	__vkew_vkCmdSetExclusiveScissorNV = (PFN_vkCmdSetExclusiveScissorNV) vkGetDeviceProcAddr(device, "vkCmdSetExclusiveScissorNV" );
	__vkew_vkCmdSetCheckpointNV = (PFN_vkCmdSetCheckpointNV) vkGetDeviceProcAddr(device, "vkCmdSetCheckpointNV" );
	__vkew_vkGetQueueCheckpointDataNV = (PFN_vkGetQueueCheckpointDataNV) vkGetDeviceProcAddr(device, "vkGetQueueCheckpointDataNV" );
	__vkew_vkGetSemaphoreCounterValueKHR = (PFN_vkGetSemaphoreCounterValueKHR) vkGetDeviceProcAddr(device, "vkGetSemaphoreCounterValueKHR" );
	__vkew_vkWaitSemaphoresKHR = (PFN_vkWaitSemaphoresKHR) vkGetDeviceProcAddr(device, "vkWaitSemaphoresKHR" );
	__vkew_vkSignalSemaphoreKHR = (PFN_vkSignalSemaphoreKHR) vkGetDeviceProcAddr(device, "vkSignalSemaphoreKHR" );
	__vkew_vkInitializePerformanceApiINTEL = (PFN_vkInitializePerformanceApiINTEL) vkGetDeviceProcAddr(device, "vkInitializePerformanceApiINTEL" );
	__vkew_vkUninitializePerformanceApiINTEL = (PFN_vkUninitializePerformanceApiINTEL) vkGetDeviceProcAddr(device, "vkUninitializePerformanceApiINTEL" );
	__vkew_vkCmdSetPerformanceMarkerINTEL = (PFN_vkCmdSetPerformanceMarkerINTEL) vkGetDeviceProcAddr(device, "vkCmdSetPerformanceMarkerINTEL" );
	__vkew_vkCmdSetPerformanceStreamMarkerINTEL = (PFN_vkCmdSetPerformanceStreamMarkerINTEL) vkGetDeviceProcAddr(device, "vkCmdSetPerformanceStreamMarkerINTEL" );
	__vkew_vkCmdSetPerformanceOverrideINTEL = (PFN_vkCmdSetPerformanceOverrideINTEL) vkGetDeviceProcAddr(device, "vkCmdSetPerformanceOverrideINTEL" );
	__vkew_vkAcquirePerformanceConfigurationINTEL = (PFN_vkAcquirePerformanceConfigurationINTEL) vkGetDeviceProcAddr(device, "vkAcquirePerformanceConfigurationINTEL" );
	__vkew_vkReleasePerformanceConfigurationINTEL = (PFN_vkReleasePerformanceConfigurationINTEL) vkGetDeviceProcAddr(device, "vkReleasePerformanceConfigurationINTEL" );
	__vkew_vkQueueSetPerformanceConfigurationINTEL = (PFN_vkQueueSetPerformanceConfigurationINTEL) vkGetDeviceProcAddr(device, "vkQueueSetPerformanceConfigurationINTEL" );
	__vkew_vkGetPerformanceParameterINTEL = (PFN_vkGetPerformanceParameterINTEL) vkGetDeviceProcAddr(device, "vkGetPerformanceParameterINTEL" );
	__vkew_vkSetLocalDimmingAMD = (PFN_vkSetLocalDimmingAMD) vkGetDeviceProcAddr(device, "vkSetLocalDimmingAMD" );
	__vkew_vkGetPhysicalDeviceFragmentShadingRatesKHR = (PFN_vkGetPhysicalDeviceFragmentShadingRatesKHR) vkGetDeviceProcAddr(device, "vkGetPhysicalDeviceFragmentShadingRatesKHR" );
	__vkew_vkCmdSetFragmentShadingRateKHR = (PFN_vkCmdSetFragmentShadingRateKHR) vkGetDeviceProcAddr(device, "vkCmdSetFragmentShadingRateKHR" );
	__vkew_vkGetBufferDeviceAddressEXT = (PFN_vkGetBufferDeviceAddressEXT) vkGetDeviceProcAddr(device, "vkGetBufferDeviceAddressEXT" );
	__vkew_vkGetPhysicalDeviceToolPropertiesEXT = (PFN_vkGetPhysicalDeviceToolPropertiesEXT) vkGetDeviceProcAddr(device, "vkGetPhysicalDeviceToolPropertiesEXT" );
	__vkew_vkWaitForPresentKHR = (PFN_vkWaitForPresentKHR) vkGetDeviceProcAddr(device, "vkWaitForPresentKHR" );
	__vkew_vkGetPhysicalDeviceCooperativeMatrixPropertiesNV = (PFN_vkGetPhysicalDeviceCooperativeMatrixPropertiesNV) vkGetDeviceProcAddr(device, "vkGetPhysicalDeviceCooperativeMatrixPropertiesNV" );
	__vkew_vkGetPhysicalDeviceSupportedFramebufferMixedSamplesCombinationsNV = (PFN_vkGetPhysicalDeviceSupportedFramebufferMixedSamplesCombinationsNV) vkGetDeviceProcAddr(device, "vkGetPhysicalDeviceSupportedFramebufferMixedSamplesCombinationsNV" );
	__vkew_vkGetBufferDeviceAddressKHR = (PFN_vkGetBufferDeviceAddressKHR) vkGetDeviceProcAddr(device, "vkGetBufferDeviceAddressKHR" );
	__vkew_vkGetBufferOpaqueCaptureAddressKHR = (PFN_vkGetBufferOpaqueCaptureAddressKHR) vkGetDeviceProcAddr(device, "vkGetBufferOpaqueCaptureAddressKHR" );
	__vkew_vkGetDeviceMemoryOpaqueCaptureAddressKHR = (PFN_vkGetDeviceMemoryOpaqueCaptureAddressKHR) vkGetDeviceProcAddr(device, "vkGetDeviceMemoryOpaqueCaptureAddressKHR" );
	__vkew_vkCmdSetLineStippleEXT = (PFN_vkCmdSetLineStippleEXT) vkGetDeviceProcAddr(device, "vkCmdSetLineStippleEXT" );
	__vkew_vkResetQueryPoolEXT = (PFN_vkResetQueryPoolEXT) vkGetDeviceProcAddr(device, "vkResetQueryPoolEXT" );
	__vkew_vkCmdSetCullModeEXT = (PFN_vkCmdSetCullModeEXT) vkGetDeviceProcAddr(device, "vkCmdSetCullModeEXT" );
	__vkew_vkCmdSetFrontFaceEXT = (PFN_vkCmdSetFrontFaceEXT) vkGetDeviceProcAddr(device, "vkCmdSetFrontFaceEXT" );
	__vkew_vkCmdSetPrimitiveTopologyEXT = (PFN_vkCmdSetPrimitiveTopologyEXT) vkGetDeviceProcAddr(device, "vkCmdSetPrimitiveTopologyEXT" );
	__vkew_vkCmdSetViewportWithCountEXT = (PFN_vkCmdSetViewportWithCountEXT) vkGetDeviceProcAddr(device, "vkCmdSetViewportWithCountEXT" );
	__vkew_vkCmdSetScissorWithCountEXT = (PFN_vkCmdSetScissorWithCountEXT) vkGetDeviceProcAddr(device, "vkCmdSetScissorWithCountEXT" );
	__vkew_vkCmdBindVertexBuffers2EXT = (PFN_vkCmdBindVertexBuffers2EXT) vkGetDeviceProcAddr(device, "vkCmdBindVertexBuffers2EXT" );
	__vkew_vkCmdSetDepthTestEnableEXT = (PFN_vkCmdSetDepthTestEnableEXT) vkGetDeviceProcAddr(device, "vkCmdSetDepthTestEnableEXT" );
	__vkew_vkCmdSetDepthWriteEnableEXT = (PFN_vkCmdSetDepthWriteEnableEXT) vkGetDeviceProcAddr(device, "vkCmdSetDepthWriteEnableEXT" );
	__vkew_vkCmdSetDepthCompareOpEXT = (PFN_vkCmdSetDepthCompareOpEXT) vkGetDeviceProcAddr(device, "vkCmdSetDepthCompareOpEXT" );
	__vkew_vkCmdSetDepthBoundsTestEnableEXT = (PFN_vkCmdSetDepthBoundsTestEnableEXT) vkGetDeviceProcAddr(device, "vkCmdSetDepthBoundsTestEnableEXT" );
	__vkew_vkCmdSetStencilTestEnableEXT = (PFN_vkCmdSetStencilTestEnableEXT) vkGetDeviceProcAddr(device, "vkCmdSetStencilTestEnableEXT" );
	__vkew_vkCmdSetStencilOpEXT = (PFN_vkCmdSetStencilOpEXT) vkGetDeviceProcAddr(device, "vkCmdSetStencilOpEXT" );
	__vkew_vkCreateDeferredOperationKHR = (PFN_vkCreateDeferredOperationKHR) vkGetDeviceProcAddr(device, "vkCreateDeferredOperationKHR" );
	__vkew_vkDestroyDeferredOperationKHR = (PFN_vkDestroyDeferredOperationKHR) vkGetDeviceProcAddr(device, "vkDestroyDeferredOperationKHR" );
	__vkew_vkGetDeferredOperationMaxConcurrencyKHR = (PFN_vkGetDeferredOperationMaxConcurrencyKHR) vkGetDeviceProcAddr(device, "vkGetDeferredOperationMaxConcurrencyKHR" );
	__vkew_vkGetDeferredOperationResultKHR = (PFN_vkGetDeferredOperationResultKHR) vkGetDeviceProcAddr(device, "vkGetDeferredOperationResultKHR" );
	__vkew_vkDeferredOperationJoinKHR = (PFN_vkDeferredOperationJoinKHR) vkGetDeviceProcAddr(device, "vkDeferredOperationJoinKHR" );
	__vkew_vkGetPipelineExecutablePropertiesKHR = (PFN_vkGetPipelineExecutablePropertiesKHR) vkGetDeviceProcAddr(device, "vkGetPipelineExecutablePropertiesKHR" );
	__vkew_vkGetPipelineExecutableStatisticsKHR = (PFN_vkGetPipelineExecutableStatisticsKHR) vkGetDeviceProcAddr(device, "vkGetPipelineExecutableStatisticsKHR" );
	__vkew_vkGetPipelineExecutableInternalRepresentationsKHR = (PFN_vkGetPipelineExecutableInternalRepresentationsKHR) vkGetDeviceProcAddr(device, "vkGetPipelineExecutableInternalRepresentationsKHR" );
	__vkew_vkGetGeneratedCommandsMemoryRequirementsNV = (PFN_vkGetGeneratedCommandsMemoryRequirementsNV) vkGetDeviceProcAddr(device, "vkGetGeneratedCommandsMemoryRequirementsNV" );
	__vkew_vkCmdPreprocessGeneratedCommandsNV = (PFN_vkCmdPreprocessGeneratedCommandsNV) vkGetDeviceProcAddr(device, "vkCmdPreprocessGeneratedCommandsNV" );
	__vkew_vkCmdExecuteGeneratedCommandsNV = (PFN_vkCmdExecuteGeneratedCommandsNV) vkGetDeviceProcAddr(device, "vkCmdExecuteGeneratedCommandsNV" );
	__vkew_vkCmdBindPipelineShaderGroupNV = (PFN_vkCmdBindPipelineShaderGroupNV) vkGetDeviceProcAddr(device, "vkCmdBindPipelineShaderGroupNV" );
	__vkew_vkCreateIndirectCommandsLayoutNV = (PFN_vkCreateIndirectCommandsLayoutNV) vkGetDeviceProcAddr(device, "vkCreateIndirectCommandsLayoutNV" );
	__vkew_vkDestroyIndirectCommandsLayoutNV = (PFN_vkDestroyIndirectCommandsLayoutNV) vkGetDeviceProcAddr(device, "vkDestroyIndirectCommandsLayoutNV" );
	__vkew_vkCreatePrivateDataSlotEXT = (PFN_vkCreatePrivateDataSlotEXT) vkGetDeviceProcAddr(device, "vkCreatePrivateDataSlotEXT" );
	__vkew_vkDestroyPrivateDataSlotEXT = (PFN_vkDestroyPrivateDataSlotEXT) vkGetDeviceProcAddr(device, "vkDestroyPrivateDataSlotEXT" );
	__vkew_vkSetPrivateDataEXT = (PFN_vkSetPrivateDataEXT) vkGetDeviceProcAddr(device, "vkSetPrivateDataEXT" );
	__vkew_vkGetPrivateDataEXT = (PFN_vkGetPrivateDataEXT) vkGetDeviceProcAddr(device, "vkGetPrivateDataEXT" );
	__vkew_vkCmdSetEvent2KHR = (PFN_vkCmdSetEvent2KHR) vkGetDeviceProcAddr(device, "vkCmdSetEvent2KHR" );
	__vkew_vkCmdResetEvent2KHR = (PFN_vkCmdResetEvent2KHR) vkGetDeviceProcAddr(device, "vkCmdResetEvent2KHR" );
	__vkew_vkCmdWaitEvents2KHR = (PFN_vkCmdWaitEvents2KHR) vkGetDeviceProcAddr(device, "vkCmdWaitEvents2KHR" );
	__vkew_vkCmdPipelineBarrier2KHR = (PFN_vkCmdPipelineBarrier2KHR) vkGetDeviceProcAddr(device, "vkCmdPipelineBarrier2KHR" );
	__vkew_vkCmdWriteTimestamp2KHR = (PFN_vkCmdWriteTimestamp2KHR) vkGetDeviceProcAddr(device, "vkCmdWriteTimestamp2KHR" );
	__vkew_vkQueueSubmit2KHR = (PFN_vkQueueSubmit2KHR) vkGetDeviceProcAddr(device, "vkQueueSubmit2KHR" );
	__vkew_vkCmdSetFragmentShadingRateEnumNV = (PFN_vkCmdSetFragmentShadingRateEnumNV) vkGetDeviceProcAddr(device, "vkCmdSetFragmentShadingRateEnumNV" );
	__vkew_vkCmdCopyBuffer2KHR = (PFN_vkCmdCopyBuffer2KHR) vkGetDeviceProcAddr(device, "vkCmdCopyBuffer2KHR" );
	__vkew_vkCmdCopyImage2KHR = (PFN_vkCmdCopyImage2KHR) vkGetDeviceProcAddr(device, "vkCmdCopyImage2KHR" );
	__vkew_vkCmdCopyBufferToImage2KHR = (PFN_vkCmdCopyBufferToImage2KHR) vkGetDeviceProcAddr(device, "vkCmdCopyBufferToImage2KHR" );
	__vkew_vkCmdCopyImageToBuffer2KHR = (PFN_vkCmdCopyImageToBuffer2KHR) vkGetDeviceProcAddr(device, "vkCmdCopyImageToBuffer2KHR" );
	__vkew_vkCmdBlitImage2KHR = (PFN_vkCmdBlitImage2KHR) vkGetDeviceProcAddr(device, "vkCmdBlitImage2KHR" );
	__vkew_vkCmdResolveImage2KHR = (PFN_vkCmdResolveImage2KHR) vkGetDeviceProcAddr(device, "vkCmdResolveImage2KHR" );
	__vkew_vkCmdSetVertexInputEXT = (PFN_vkCmdSetVertexInputEXT) vkGetDeviceProcAddr(device, "vkCmdSetVertexInputEXT" );
	__vkew_vkGetDeviceSubpassShadingMaxWorkgroupSizeHUAWEI = (PFN_vkGetDeviceSubpassShadingMaxWorkgroupSizeHUAWEI) vkGetDeviceProcAddr(device, "vkGetDeviceSubpassShadingMaxWorkgroupSizeHUAWEI" );
	__vkew_vkCmdSubpassShadingHUAWEI = (PFN_vkCmdSubpassShadingHUAWEI) vkGetDeviceProcAddr(device, "vkCmdSubpassShadingHUAWEI" );
	__vkew_vkCmdBindInvocationMaskHUAWEI = (PFN_vkCmdBindInvocationMaskHUAWEI) vkGetDeviceProcAddr(device, "vkCmdBindInvocationMaskHUAWEI" );
	__vkew_vkGetMemoryRemoteAddressNV = (PFN_vkGetMemoryRemoteAddressNV) vkGetDeviceProcAddr(device, "vkGetMemoryRemoteAddressNV" );
	__vkew_vkCmdSetPatchControlPointsEXT = (PFN_vkCmdSetPatchControlPointsEXT) vkGetDeviceProcAddr(device, "vkCmdSetPatchControlPointsEXT" );
	__vkew_vkCmdSetRasterizerDiscardEnableEXT = (PFN_vkCmdSetRasterizerDiscardEnableEXT) vkGetDeviceProcAddr(device, "vkCmdSetRasterizerDiscardEnableEXT" );
	__vkew_vkCmdSetDepthBiasEnableEXT = (PFN_vkCmdSetDepthBiasEnableEXT) vkGetDeviceProcAddr(device, "vkCmdSetDepthBiasEnableEXT" );
	__vkew_vkCmdSetLogicOpEXT = (PFN_vkCmdSetLogicOpEXT) vkGetDeviceProcAddr(device, "vkCmdSetLogicOpEXT" );
	__vkew_vkCmdSetPrimitiveRestartEnableEXT = (PFN_vkCmdSetPrimitiveRestartEnableEXT) vkGetDeviceProcAddr(device, "vkCmdSetPrimitiveRestartEnableEXT" );
	__vkew_vkCmdSetColorWriteEnableEXT = (PFN_vkCmdSetColorWriteEnableEXT) vkGetDeviceProcAddr(device, "vkCmdSetColorWriteEnableEXT" );
	__vkew_vkCmdDrawMultiEXT = (PFN_vkCmdDrawMultiEXT) vkGetDeviceProcAddr(device, "vkCmdDrawMultiEXT" );
	__vkew_vkCmdDrawMultiIndexedEXT = (PFN_vkCmdDrawMultiIndexedEXT) vkGetDeviceProcAddr(device, "vkCmdDrawMultiIndexedEXT" );
	__vkew_vkSetDeviceMemoryPriorityEXT = (PFN_vkSetDeviceMemoryPriorityEXT) vkGetDeviceProcAddr(device, "vkSetDeviceMemoryPriorityEXT" );
	__vkew_vkGetDeviceBufferMemoryRequirementsKHR = (PFN_vkGetDeviceBufferMemoryRequirementsKHR) vkGetDeviceProcAddr(device, "vkGetDeviceBufferMemoryRequirementsKHR" );
	__vkew_vkGetDeviceImageMemoryRequirementsKHR = (PFN_vkGetDeviceImageMemoryRequirementsKHR) vkGetDeviceProcAddr(device, "vkGetDeviceImageMemoryRequirementsKHR" );
	__vkew_vkGetDeviceImageSparseMemoryRequirementsKHR = (PFN_vkGetDeviceImageSparseMemoryRequirementsKHR) vkGetDeviceProcAddr(device, "vkGetDeviceImageSparseMemoryRequirementsKHR" );
	#ifdef VK_USE_PLATFORM_ANDROID
		__vkew_vkGetAndroidHardwareBufferPropertiesANDROID = (PFN_vkGetAndroidHardwareBufferPropertiesANDROID) vkGetDeviceProcAddr(device, "vkGetAndroidHardwareBufferPropertiesANDROID" );
	#endif //android
	#ifdef VK_USE_PLATFORM_ANDROID
		__vkew_vkGetMemoryAndroidHardwareBufferANDROID = (PFN_vkGetMemoryAndroidHardwareBufferANDROID) vkGetDeviceProcAddr(device, "vkGetMemoryAndroidHardwareBufferANDROID" );
	#endif //android
	#ifdef VK_USE_PLATFORM_WIN32
		__vkew_vkGetMemoryWin32HandleNV = (PFN_vkGetMemoryWin32HandleNV) vkGetDeviceProcAddr(device, "vkGetMemoryWin32HandleNV" );
	#endif //win32
	#ifdef VK_USE_PLATFORM_WIN32
		__vkew_vkGetMemoryWin32HandleKHR = (PFN_vkGetMemoryWin32HandleKHR) vkGetDeviceProcAddr(device, "vkGetMemoryWin32HandleKHR" );
	#endif //win32
	#ifdef VK_USE_PLATFORM_WIN32
		__vkew_vkGetMemoryWin32HandlePropertiesKHR = (PFN_vkGetMemoryWin32HandlePropertiesKHR) vkGetDeviceProcAddr(device, "vkGetMemoryWin32HandlePropertiesKHR" );
	#endif //win32
	#ifdef VK_USE_PLATFORM_WIN32
		__vkew_vkImportSemaphoreWin32HandleKHR = (PFN_vkImportSemaphoreWin32HandleKHR) vkGetDeviceProcAddr(device, "vkImportSemaphoreWin32HandleKHR" );
	#endif //win32
	#ifdef VK_USE_PLATFORM_WIN32
		__vkew_vkGetSemaphoreWin32HandleKHR = (PFN_vkGetSemaphoreWin32HandleKHR) vkGetDeviceProcAddr(device, "vkGetSemaphoreWin32HandleKHR" );
	#endif //win32
	#ifdef VK_USE_PLATFORM_WIN32
		__vkew_vkImportFenceWin32HandleKHR = (PFN_vkImportFenceWin32HandleKHR) vkGetDeviceProcAddr(device, "vkImportFenceWin32HandleKHR" );
	#endif //win32
	#ifdef VK_USE_PLATFORM_WIN32
		__vkew_vkGetFenceWin32HandleKHR = (PFN_vkGetFenceWin32HandleKHR) vkGetDeviceProcAddr(device, "vkGetFenceWin32HandleKHR" );
	#endif //win32
	#ifdef VK_USE_PLATFORM_WIN32
		__vkew_vkGetPhysicalDeviceSurfacePresentModes2EXT = (PFN_vkGetPhysicalDeviceSurfacePresentModes2EXT) vkGetDeviceProcAddr(device, "vkGetPhysicalDeviceSurfacePresentModes2EXT" );
	#endif //win32
	#ifdef VK_USE_PLATFORM_WIN32
		__vkew_vkAcquireFullScreenExclusiveModeEXT = (PFN_vkAcquireFullScreenExclusiveModeEXT) vkGetDeviceProcAddr(device, "vkAcquireFullScreenExclusiveModeEXT" );
	#endif //win32
	#ifdef VK_USE_PLATFORM_WIN32
		__vkew_vkReleaseFullScreenExclusiveModeEXT = (PFN_vkReleaseFullScreenExclusiveModeEXT) vkGetDeviceProcAddr(device, "vkReleaseFullScreenExclusiveModeEXT" );
	#endif //win32
	#ifdef VK_USE_PLATFORM_WIN32
		__vkew_vkAcquireWinrtDisplayNV = (PFN_vkAcquireWinrtDisplayNV) vkGetDeviceProcAddr(device, "vkAcquireWinrtDisplayNV" );
	#endif //win32
	#ifdef VK_USE_PLATFORM_WIN32
		__vkew_vkGetWinrtDisplayNV = (PFN_vkGetWinrtDisplayNV) vkGetDeviceProcAddr(device, "vkGetWinrtDisplayNV" );
	#endif //win32
	#ifdef VK_USE_PLATFORM_PROVISIONAL
		__vkew_vkGetPhysicalDeviceVideoCapabilitiesKHR = (PFN_vkGetPhysicalDeviceVideoCapabilitiesKHR) vkGetDeviceProcAddr(device, "vkGetPhysicalDeviceVideoCapabilitiesKHR" );
	#endif //provisional
	#ifdef VK_USE_PLATFORM_PROVISIONAL
		__vkew_vkGetPhysicalDeviceVideoFormatPropertiesKHR = (PFN_vkGetPhysicalDeviceVideoFormatPropertiesKHR) vkGetDeviceProcAddr(device, "vkGetPhysicalDeviceVideoFormatPropertiesKHR" );
	#endif //provisional
	#ifdef VK_USE_PLATFORM_PROVISIONAL
		__vkew_vkCreateVideoSessionKHR = (PFN_vkCreateVideoSessionKHR) vkGetDeviceProcAddr(device, "vkCreateVideoSessionKHR" );
	#endif //provisional
	#ifdef VK_USE_PLATFORM_PROVISIONAL
		__vkew_vkDestroyVideoSessionKHR = (PFN_vkDestroyVideoSessionKHR) vkGetDeviceProcAddr(device, "vkDestroyVideoSessionKHR" );
	#endif //provisional
	#ifdef VK_USE_PLATFORM_PROVISIONAL
		__vkew_vkGetVideoSessionMemoryRequirementsKHR = (PFN_vkGetVideoSessionMemoryRequirementsKHR) vkGetDeviceProcAddr(device, "vkGetVideoSessionMemoryRequirementsKHR" );
	#endif //provisional
	#ifdef VK_USE_PLATFORM_PROVISIONAL
		__vkew_vkBindVideoSessionMemoryKHR = (PFN_vkBindVideoSessionMemoryKHR) vkGetDeviceProcAddr(device, "vkBindVideoSessionMemoryKHR" );
	#endif //provisional
	#ifdef VK_USE_PLATFORM_PROVISIONAL
		__vkew_vkCreateVideoSessionParametersKHR = (PFN_vkCreateVideoSessionParametersKHR) vkGetDeviceProcAddr(device, "vkCreateVideoSessionParametersKHR" );
	#endif //provisional
	#ifdef VK_USE_PLATFORM_PROVISIONAL
		__vkew_vkUpdateVideoSessionParametersKHR = (PFN_vkUpdateVideoSessionParametersKHR) vkGetDeviceProcAddr(device, "vkUpdateVideoSessionParametersKHR" );
	#endif //provisional
	#ifdef VK_USE_PLATFORM_PROVISIONAL
		__vkew_vkDestroyVideoSessionParametersKHR = (PFN_vkDestroyVideoSessionParametersKHR) vkGetDeviceProcAddr(device, "vkDestroyVideoSessionParametersKHR" );
	#endif //provisional
	#ifdef VK_USE_PLATFORM_PROVISIONAL
		__vkew_vkCmdBeginVideoCodingKHR = (PFN_vkCmdBeginVideoCodingKHR) vkGetDeviceProcAddr(device, "vkCmdBeginVideoCodingKHR" );
	#endif //provisional
	#ifdef VK_USE_PLATFORM_PROVISIONAL
		__vkew_vkCmdEndVideoCodingKHR = (PFN_vkCmdEndVideoCodingKHR) vkGetDeviceProcAddr(device, "vkCmdEndVideoCodingKHR" );
	#endif //provisional
	#ifdef VK_USE_PLATFORM_PROVISIONAL
		__vkew_vkCmdControlVideoCodingKHR = (PFN_vkCmdControlVideoCodingKHR) vkGetDeviceProcAddr(device, "vkCmdControlVideoCodingKHR" );
	#endif //provisional
	#ifdef VK_USE_PLATFORM_PROVISIONAL
		__vkew_vkCmdDecodeVideoKHR = (PFN_vkCmdDecodeVideoKHR) vkGetDeviceProcAddr(device, "vkCmdDecodeVideoKHR" );
	#endif //provisional
	#ifdef VK_USE_PLATFORM_PROVISIONAL
		__vkew_vkCmdEncodeVideoKHR = (PFN_vkCmdEncodeVideoKHR) vkGetDeviceProcAddr(device, "vkCmdEncodeVideoKHR" );
	#endif //provisional
	#ifdef VK_USE_PLATFORM_FUCHSIA
		__vkew_vkGetMemoryZirconHandleFUCHSIA = (PFN_vkGetMemoryZirconHandleFUCHSIA) vkGetDeviceProcAddr(device, "vkGetMemoryZirconHandleFUCHSIA" );
	#endif //fuchsia
	#ifdef VK_USE_PLATFORM_FUCHSIA
		__vkew_vkGetMemoryZirconHandlePropertiesFUCHSIA = (PFN_vkGetMemoryZirconHandlePropertiesFUCHSIA) vkGetDeviceProcAddr(device, "vkGetMemoryZirconHandlePropertiesFUCHSIA" );
	#endif //fuchsia
	#ifdef VK_USE_PLATFORM_FUCHSIA
		__vkew_vkImportSemaphoreZirconHandleFUCHSIA = (PFN_vkImportSemaphoreZirconHandleFUCHSIA) vkGetDeviceProcAddr(device, "vkImportSemaphoreZirconHandleFUCHSIA" );
	#endif //fuchsia
	#ifdef VK_USE_PLATFORM_FUCHSIA
		__vkew_vkGetSemaphoreZirconHandleFUCHSIA = (PFN_vkGetSemaphoreZirconHandleFUCHSIA) vkGetDeviceProcAddr(device, "vkGetSemaphoreZirconHandleFUCHSIA" );
	#endif //fuchsia
	#ifdef VK_USE_PLATFORM_FUCHSIA
		__vkew_vkCreateBufferCollectionFUCHSIA = (PFN_vkCreateBufferCollectionFUCHSIA) vkGetDeviceProcAddr(device, "vkCreateBufferCollectionFUCHSIA" );
	#endif //fuchsia
	#ifdef VK_USE_PLATFORM_FUCHSIA
		__vkew_vkSetBufferCollectionImageConstraintsFUCHSIA = (PFN_vkSetBufferCollectionImageConstraintsFUCHSIA) vkGetDeviceProcAddr(device, "vkSetBufferCollectionImageConstraintsFUCHSIA" );
	#endif //fuchsia
	#ifdef VK_USE_PLATFORM_FUCHSIA
		__vkew_vkSetBufferCollectionBufferConstraintsFUCHSIA = (PFN_vkSetBufferCollectionBufferConstraintsFUCHSIA) vkGetDeviceProcAddr(device, "vkSetBufferCollectionBufferConstraintsFUCHSIA" );
	#endif //fuchsia
	#ifdef VK_USE_PLATFORM_FUCHSIA
		__vkew_vkDestroyBufferCollectionFUCHSIA = (PFN_vkDestroyBufferCollectionFUCHSIA) vkGetDeviceProcAddr(device, "vkDestroyBufferCollectionFUCHSIA" );
	#endif //fuchsia
	#ifdef VK_USE_PLATFORM_FUCHSIA
		__vkew_vkGetBufferCollectionPropertiesFUCHSIA = (PFN_vkGetBufferCollectionPropertiesFUCHSIA) vkGetDeviceProcAddr(device, "vkGetBufferCollectionPropertiesFUCHSIA" );
	#endif //fuchsia
}


/// Forget about all pointers loaded by VKEW. VKEW loaded comands are unavailable unless vkewInitInstance() and vkewInitDevice() are called again.
/// \note This function cannot fail.
static void vkewQuit()
{
	// Instance:
	__vkew_vkDestroySurfaceKHR = NULL;
	__vkew_vkGetPhysicalDeviceSurfaceSupportKHR = NULL;
	__vkew_vkGetPhysicalDeviceSurfaceCapabilitiesKHR = NULL;
	__vkew_vkGetPhysicalDeviceSurfaceFormatsKHR = NULL;
	__vkew_vkGetPhysicalDeviceSurfacePresentModesKHR = NULL;
	__vkew_vkGetPhysicalDeviceDisplayPropertiesKHR = NULL;
	__vkew_vkGetPhysicalDeviceDisplayPlanePropertiesKHR = NULL;
	__vkew_vkGetDisplayPlaneSupportedDisplaysKHR = NULL;
	__vkew_vkGetDisplayModePropertiesKHR = NULL;
	__vkew_vkCreateDisplayModeKHR = NULL;
	__vkew_vkGetDisplayPlaneCapabilitiesKHR = NULL;
	__vkew_vkCreateDisplayPlaneSurfaceKHR = NULL;
	__vkew_vkCreateDebugReportCallbackEXT = NULL;
	__vkew_vkDestroyDebugReportCallbackEXT = NULL;
	__vkew_vkDebugReportMessageEXT = NULL;
	__vkew_vkGetPhysicalDeviceExternalImageFormatPropertiesNV = NULL;
	__vkew_vkGetPhysicalDeviceFeatures2KHR = NULL;
	__vkew_vkGetPhysicalDeviceProperties2KHR = NULL;
	__vkew_vkGetPhysicalDeviceFormatProperties2KHR = NULL;
	__vkew_vkGetPhysicalDeviceImageFormatProperties2KHR = NULL;
	__vkew_vkGetPhysicalDeviceQueueFamilyProperties2KHR = NULL;
	__vkew_vkGetPhysicalDeviceMemoryProperties2KHR = NULL;
	__vkew_vkGetPhysicalDeviceSparseImageFormatProperties2KHR = NULL;
	__vkew_vkEnumeratePhysicalDeviceGroupsKHR = NULL;
	__vkew_vkGetPhysicalDeviceExternalBufferPropertiesKHR = NULL;
	__vkew_vkGetPhysicalDeviceExternalSemaphorePropertiesKHR = NULL;
	__vkew_vkReleaseDisplayEXT = NULL;
	__vkew_vkGetPhysicalDeviceSurfaceCapabilities2EXT = NULL;
	__vkew_vkGetPhysicalDeviceExternalFencePropertiesKHR = NULL;
	__vkew_vkGetPhysicalDeviceSurfaceCapabilities2KHR = NULL;
	__vkew_vkGetPhysicalDeviceSurfaceFormats2KHR = NULL;
	__vkew_vkGetPhysicalDeviceDisplayProperties2KHR = NULL;
	__vkew_vkGetPhysicalDeviceDisplayPlaneProperties2KHR = NULL;
	__vkew_vkGetDisplayModeProperties2KHR = NULL;
	__vkew_vkGetDisplayPlaneCapabilities2KHR = NULL;
	__vkew_vkSetDebugUtilsObjectNameEXT = NULL;
	__vkew_vkSetDebugUtilsObjectTagEXT = NULL;
	__vkew_vkQueueBeginDebugUtilsLabelEXT = NULL;
	__vkew_vkQueueEndDebugUtilsLabelEXT = NULL;
	__vkew_vkQueueInsertDebugUtilsLabelEXT = NULL;
	__vkew_vkCmdBeginDebugUtilsLabelEXT = NULL;
	__vkew_vkCmdEndDebugUtilsLabelEXT = NULL;
	__vkew_vkCmdInsertDebugUtilsLabelEXT = NULL;
	__vkew_vkCreateDebugUtilsMessengerEXT = NULL;
	__vkew_vkDestroyDebugUtilsMessengerEXT = NULL;
	__vkew_vkSubmitDebugUtilsMessageEXT = NULL;
	__vkew_vkCreateHeadlessSurfaceEXT = NULL;
	__vkew_vkAcquireDrmDisplayEXT = NULL;
	__vkew_vkGetDrmDisplayEXT = NULL;
	#ifdef VK_USE_PLATFORM_XLIB
		__vkew_vkCreateXlibSurfaceKHR = NULL;
	#endif //xlib
	#ifdef VK_USE_PLATFORM_XLIB
		__vkew_vkGetPhysicalDeviceXlibPresentationSupportKHR = NULL;
	#endif //xlib
	#ifdef VK_USE_PLATFORM_XCB
		__vkew_vkCreateXcbSurfaceKHR = NULL;
	#endif //xcb
	#ifdef VK_USE_PLATFORM_XCB
		__vkew_vkGetPhysicalDeviceXcbPresentationSupportKHR = NULL;
	#endif //xcb
	#ifdef VK_USE_PLATFORM_WAYLAND
		__vkew_vkCreateWaylandSurfaceKHR = NULL;
	#endif //wayland
	#ifdef VK_USE_PLATFORM_WAYLAND
		__vkew_vkGetPhysicalDeviceWaylandPresentationSupportKHR = NULL;
	#endif //wayland
	#ifdef VK_USE_PLATFORM_ANDROID
		__vkew_vkCreateAndroidSurfaceKHR = NULL;
	#endif //android
	#ifdef VK_USE_PLATFORM_WIN32
		__vkew_vkCreateWin32SurfaceKHR = NULL;
	#endif //win32
	#ifdef VK_USE_PLATFORM_WIN32
		__vkew_vkGetPhysicalDeviceWin32PresentationSupportKHR = NULL;
	#endif //win32
	#ifdef VK_USE_PLATFORM_GGP
		__vkew_vkCreateStreamDescriptorSurfaceGGP = NULL;
	#endif //ggp
	#ifdef VK_USE_PLATFORM_VI
		__vkew_vkCreateViSurfaceNN = NULL;
	#endif //vi
	#ifdef VK_USE_PLATFORM_XLIB_XRANDR
		__vkew_vkAcquireXlibDisplayEXT = NULL;
	#endif //xlib_xrandr
	#ifdef VK_USE_PLATFORM_XLIB_XRANDR
		__vkew_vkGetRandROutputDisplayEXT = NULL;
	#endif //xlib_xrandr
	#ifdef VK_USE_PLATFORM_IOS
		__vkew_vkCreateIOSSurfaceMVK = NULL;
	#endif //ios
	#ifdef VK_USE_PLATFORM_MACOS
		__vkew_vkCreateMacOSSurfaceMVK = NULL;
	#endif //macos
	#ifdef VK_USE_PLATFORM_FUCHSIA
		__vkew_vkCreateImagePipeSurfaceFUCHSIA = NULL;
	#endif //fuchsia
	#ifdef VK_USE_PLATFORM_METAL
		__vkew_vkCreateMetalSurfaceEXT = NULL;
	#endif //metal
	#ifdef VK_USE_PLATFORM_DIRECTFB
		__vkew_vkCreateDirectFBSurfaceEXT = NULL;
	#endif //directfb
	#ifdef VK_USE_PLATFORM_DIRECTFB
		__vkew_vkGetPhysicalDeviceDirectFBPresentationSupportEXT = NULL;
	#endif //directfb
	#ifdef VK_USE_PLATFORM_SCREEN
		__vkew_vkCreateScreenSurfaceQNX = NULL;
	#endif //screen
	#ifdef VK_USE_PLATFORM_SCREEN
		__vkew_vkGetPhysicalDeviceScreenPresentationSupportQNX = NULL;
	#endif //screen
// Device:
	__vkew_vkCreateSwapchainKHR = NULL;
	__vkew_vkDestroySwapchainKHR = NULL;
	__vkew_vkGetSwapchainImagesKHR = NULL;
	__vkew_vkAcquireNextImageKHR = NULL;
	__vkew_vkQueuePresentKHR = NULL;
	__vkew_vkCreateSharedSwapchainsKHR = NULL;
	__vkew_vkDebugMarkerSetObjectTagEXT = NULL;
	__vkew_vkDebugMarkerSetObjectNameEXT = NULL;
	__vkew_vkCmdDebugMarkerBeginEXT = NULL;
	__vkew_vkCmdDebugMarkerEndEXT = NULL;
	__vkew_vkCmdDebugMarkerInsertEXT = NULL;
	__vkew_vkCmdBindTransformFeedbackBuffersEXT = NULL;
	__vkew_vkCmdBeginTransformFeedbackEXT = NULL;
	__vkew_vkCmdEndTransformFeedbackEXT = NULL;
	__vkew_vkCmdBeginQueryIndexedEXT = NULL;
	__vkew_vkCmdEndQueryIndexedEXT = NULL;
	__vkew_vkCmdDrawIndirectByteCountEXT = NULL;
	__vkew_vkCreateCuModuleNVX = NULL;
	__vkew_vkCreateCuFunctionNVX = NULL;
	__vkew_vkDestroyCuModuleNVX = NULL;
	__vkew_vkDestroyCuFunctionNVX = NULL;
	__vkew_vkCmdCuLaunchKernelNVX = NULL;
	__vkew_vkGetImageViewHandleNVX = NULL;
	__vkew_vkGetImageViewAddressNVX = NULL;
	__vkew_vkCmdDrawIndirectCountAMD = NULL;
	__vkew_vkCmdDrawIndexedIndirectCountAMD = NULL;
	__vkew_vkGetShaderInfoAMD = NULL;
	__vkew_vkCmdBeginRenderingKHR = NULL;
	__vkew_vkCmdEndRenderingKHR = NULL;
	__vkew_vkGetDeviceGroupPeerMemoryFeaturesKHR = NULL;
	__vkew_vkCmdSetDeviceMaskKHR = NULL;
	__vkew_vkCmdDispatchBaseKHR = NULL;
	__vkew_vkTrimCommandPoolKHR = NULL;
	__vkew_vkGetMemoryFdKHR = NULL;
	__vkew_vkGetMemoryFdPropertiesKHR = NULL;
	__vkew_vkImportSemaphoreFdKHR = NULL;
	__vkew_vkGetSemaphoreFdKHR = NULL;
	__vkew_vkCmdPushDescriptorSetKHR = NULL;
	__vkew_vkCmdBeginConditionalRenderingEXT = NULL;
	__vkew_vkCmdEndConditionalRenderingEXT = NULL;
	__vkew_vkCreateDescriptorUpdateTemplateKHR = NULL;
	__vkew_vkDestroyDescriptorUpdateTemplateKHR = NULL;
	__vkew_vkUpdateDescriptorSetWithTemplateKHR = NULL;
	__vkew_vkCmdSetViewportWScalingNV = NULL;
	__vkew_vkDisplayPowerControlEXT = NULL;
	__vkew_vkRegisterDeviceEventEXT = NULL;
	__vkew_vkRegisterDisplayEventEXT = NULL;
	__vkew_vkGetSwapchainCounterEXT = NULL;
	__vkew_vkGetRefreshCycleDurationGOOGLE = NULL;
	__vkew_vkGetPastPresentationTimingGOOGLE = NULL;
	__vkew_vkCmdSetDiscardRectangleEXT = NULL;
	__vkew_vkSetHdrMetadataEXT = NULL;
	__vkew_vkCreateRenderPass2KHR = NULL;
	__vkew_vkCmdBeginRenderPass2KHR = NULL;
	__vkew_vkCmdNextSubpass2KHR = NULL;
	__vkew_vkCmdEndRenderPass2KHR = NULL;
	__vkew_vkGetSwapchainStatusKHR = NULL;
	__vkew_vkImportFenceFdKHR = NULL;
	__vkew_vkGetFenceFdKHR = NULL;
	__vkew_vkEnumeratePhysicalDeviceQueueFamilyPerformanceQueryCountersKHR = NULL;
	__vkew_vkGetPhysicalDeviceQueueFamilyPerformanceQueryPassesKHR = NULL;
	__vkew_vkAcquireProfilingLockKHR = NULL;
	__vkew_vkReleaseProfilingLockKHR = NULL;
	__vkew_vkCmdSetSampleLocationsEXT = NULL;
	__vkew_vkGetPhysicalDeviceMultisamplePropertiesEXT = NULL;
	__vkew_vkGetImageMemoryRequirements2KHR = NULL;
	__vkew_vkGetBufferMemoryRequirements2KHR = NULL;
	__vkew_vkGetImageSparseMemoryRequirements2KHR = NULL;
	__vkew_vkCreateAccelerationStructureKHR = NULL;
	__vkew_vkDestroyAccelerationStructureKHR = NULL;
	__vkew_vkCmdBuildAccelerationStructuresKHR = NULL;
	__vkew_vkCmdBuildAccelerationStructuresIndirectKHR = NULL;
	__vkew_vkBuildAccelerationStructuresKHR = NULL;
	__vkew_vkCopyAccelerationStructureKHR = NULL;
	__vkew_vkCopyAccelerationStructureToMemoryKHR = NULL;
	__vkew_vkCopyMemoryToAccelerationStructureKHR = NULL;
	__vkew_vkWriteAccelerationStructuresPropertiesKHR = NULL;
	__vkew_vkCmdCopyAccelerationStructureKHR = NULL;
	__vkew_vkCmdCopyAccelerationStructureToMemoryKHR = NULL;
	__vkew_vkCmdCopyMemoryToAccelerationStructureKHR = NULL;
	__vkew_vkGetAccelerationStructureDeviceAddressKHR = NULL;
	__vkew_vkCmdWriteAccelerationStructuresPropertiesKHR = NULL;
	__vkew_vkGetDeviceAccelerationStructureCompatibilityKHR = NULL;
	__vkew_vkGetAccelerationStructureBuildSizesKHR = NULL;
	__vkew_vkCmdTraceRaysKHR = NULL;
	__vkew_vkCreateRayTracingPipelinesKHR = NULL;
	__vkew_vkGetRayTracingShaderGroupHandlesKHR = NULL;
	__vkew_vkGetRayTracingCaptureReplayShaderGroupHandlesKHR = NULL;
	__vkew_vkCmdTraceRaysIndirectKHR = NULL;
	__vkew_vkGetRayTracingShaderGroupStackSizeKHR = NULL;
	__vkew_vkCmdSetRayTracingPipelineStackSizeKHR = NULL;
	__vkew_vkCreateSamplerYcbcrConversionKHR = NULL;
	__vkew_vkDestroySamplerYcbcrConversionKHR = NULL;
	__vkew_vkBindBufferMemory2KHR = NULL;
	__vkew_vkBindImageMemory2KHR = NULL;
	__vkew_vkGetImageDrmFormatModifierPropertiesEXT = NULL;
	__vkew_vkCreateValidationCacheEXT = NULL;
	__vkew_vkDestroyValidationCacheEXT = NULL;
	__vkew_vkMergeValidationCachesEXT = NULL;
	__vkew_vkGetValidationCacheDataEXT = NULL;
	__vkew_vkCmdBindShadingRateImageNV = NULL;
	__vkew_vkCmdSetViewportShadingRatePaletteNV = NULL;
	__vkew_vkCmdSetCoarseSampleOrderNV = NULL;
	__vkew_vkCreateAccelerationStructureNV = NULL;
	__vkew_vkDestroyAccelerationStructureNV = NULL;
	__vkew_vkGetAccelerationStructureMemoryRequirementsNV = NULL;
	__vkew_vkBindAccelerationStructureMemoryNV = NULL;
	__vkew_vkCmdBuildAccelerationStructureNV = NULL;
	__vkew_vkCmdCopyAccelerationStructureNV = NULL;
	__vkew_vkCmdTraceRaysNV = NULL;
	__vkew_vkCreateRayTracingPipelinesNV = NULL;
	__vkew_vkGetRayTracingShaderGroupHandlesNV = NULL;
	__vkew_vkGetAccelerationStructureHandleNV = NULL;
	__vkew_vkCmdWriteAccelerationStructuresPropertiesNV = NULL;
	__vkew_vkCompileDeferredNV = NULL;
	__vkew_vkGetDescriptorSetLayoutSupportKHR = NULL;
	__vkew_vkCmdDrawIndirectCountKHR = NULL;
	__vkew_vkCmdDrawIndexedIndirectCountKHR = NULL;
	__vkew_vkGetMemoryHostPointerPropertiesEXT = NULL;
	__vkew_vkCmdWriteBufferMarkerAMD = NULL;
	__vkew_vkGetPhysicalDeviceCalibrateableTimeDomainsEXT = NULL;
	__vkew_vkGetCalibratedTimestampsEXT = NULL;
	__vkew_vkCmdDrawMeshTasksNV = NULL;
	__vkew_vkCmdDrawMeshTasksIndirectNV = NULL;
	__vkew_vkCmdDrawMeshTasksIndirectCountNV = NULL;
	__vkew_vkCmdSetExclusiveScissorNV = NULL;
	__vkew_vkCmdSetCheckpointNV = NULL;
	__vkew_vkGetQueueCheckpointDataNV = NULL;
	__vkew_vkGetSemaphoreCounterValueKHR = NULL;
	__vkew_vkWaitSemaphoresKHR = NULL;
	__vkew_vkSignalSemaphoreKHR = NULL;
	__vkew_vkInitializePerformanceApiINTEL = NULL;
	__vkew_vkUninitializePerformanceApiINTEL = NULL;
	__vkew_vkCmdSetPerformanceMarkerINTEL = NULL;
	__vkew_vkCmdSetPerformanceStreamMarkerINTEL = NULL;
	__vkew_vkCmdSetPerformanceOverrideINTEL = NULL;
	__vkew_vkAcquirePerformanceConfigurationINTEL = NULL;
	__vkew_vkReleasePerformanceConfigurationINTEL = NULL;
	__vkew_vkQueueSetPerformanceConfigurationINTEL = NULL;
	__vkew_vkGetPerformanceParameterINTEL = NULL;
	__vkew_vkSetLocalDimmingAMD = NULL;
	__vkew_vkGetPhysicalDeviceFragmentShadingRatesKHR = NULL;
	__vkew_vkCmdSetFragmentShadingRateKHR = NULL;
	__vkew_vkGetBufferDeviceAddressEXT = NULL;
	__vkew_vkGetPhysicalDeviceToolPropertiesEXT = NULL;
	__vkew_vkWaitForPresentKHR = NULL;
	__vkew_vkGetPhysicalDeviceCooperativeMatrixPropertiesNV = NULL;
	__vkew_vkGetPhysicalDeviceSupportedFramebufferMixedSamplesCombinationsNV = NULL;
	__vkew_vkGetBufferDeviceAddressKHR = NULL;
	__vkew_vkGetBufferOpaqueCaptureAddressKHR = NULL;
	__vkew_vkGetDeviceMemoryOpaqueCaptureAddressKHR = NULL;
	__vkew_vkCmdSetLineStippleEXT = NULL;
	__vkew_vkResetQueryPoolEXT = NULL;
	__vkew_vkCmdSetCullModeEXT = NULL;
	__vkew_vkCmdSetFrontFaceEXT = NULL;
	__vkew_vkCmdSetPrimitiveTopologyEXT = NULL;
	__vkew_vkCmdSetViewportWithCountEXT = NULL;
	__vkew_vkCmdSetScissorWithCountEXT = NULL;
	__vkew_vkCmdBindVertexBuffers2EXT = NULL;
	__vkew_vkCmdSetDepthTestEnableEXT = NULL;
	__vkew_vkCmdSetDepthWriteEnableEXT = NULL;
	__vkew_vkCmdSetDepthCompareOpEXT = NULL;
	__vkew_vkCmdSetDepthBoundsTestEnableEXT = NULL;
	__vkew_vkCmdSetStencilTestEnableEXT = NULL;
	__vkew_vkCmdSetStencilOpEXT = NULL;
	__vkew_vkCreateDeferredOperationKHR = NULL;
	__vkew_vkDestroyDeferredOperationKHR = NULL;
	__vkew_vkGetDeferredOperationMaxConcurrencyKHR = NULL;
	__vkew_vkGetDeferredOperationResultKHR = NULL;
	__vkew_vkDeferredOperationJoinKHR = NULL;
	__vkew_vkGetPipelineExecutablePropertiesKHR = NULL;
	__vkew_vkGetPipelineExecutableStatisticsKHR = NULL;
	__vkew_vkGetPipelineExecutableInternalRepresentationsKHR = NULL;
	__vkew_vkGetGeneratedCommandsMemoryRequirementsNV = NULL;
	__vkew_vkCmdPreprocessGeneratedCommandsNV = NULL;
	__vkew_vkCmdExecuteGeneratedCommandsNV = NULL;
	__vkew_vkCmdBindPipelineShaderGroupNV = NULL;
	__vkew_vkCreateIndirectCommandsLayoutNV = NULL;
	__vkew_vkDestroyIndirectCommandsLayoutNV = NULL;
	__vkew_vkCreatePrivateDataSlotEXT = NULL;
	__vkew_vkDestroyPrivateDataSlotEXT = NULL;
	__vkew_vkSetPrivateDataEXT = NULL;
	__vkew_vkGetPrivateDataEXT = NULL;
	__vkew_vkCmdSetEvent2KHR = NULL;
	__vkew_vkCmdResetEvent2KHR = NULL;
	__vkew_vkCmdWaitEvents2KHR = NULL;
	__vkew_vkCmdPipelineBarrier2KHR = NULL;
	__vkew_vkCmdWriteTimestamp2KHR = NULL;
	__vkew_vkQueueSubmit2KHR = NULL;
	__vkew_vkCmdSetFragmentShadingRateEnumNV = NULL;
	__vkew_vkCmdCopyBuffer2KHR = NULL;
	__vkew_vkCmdCopyImage2KHR = NULL;
	__vkew_vkCmdCopyBufferToImage2KHR = NULL;
	__vkew_vkCmdCopyImageToBuffer2KHR = NULL;
	__vkew_vkCmdBlitImage2KHR = NULL;
	__vkew_vkCmdResolveImage2KHR = NULL;
	__vkew_vkCmdSetVertexInputEXT = NULL;
	__vkew_vkGetDeviceSubpassShadingMaxWorkgroupSizeHUAWEI = NULL;
	__vkew_vkCmdSubpassShadingHUAWEI = NULL;
	__vkew_vkCmdBindInvocationMaskHUAWEI = NULL;
	__vkew_vkGetMemoryRemoteAddressNV = NULL;
	__vkew_vkCmdSetPatchControlPointsEXT = NULL;
	__vkew_vkCmdSetRasterizerDiscardEnableEXT = NULL;
	__vkew_vkCmdSetDepthBiasEnableEXT = NULL;
	__vkew_vkCmdSetLogicOpEXT = NULL;
	__vkew_vkCmdSetPrimitiveRestartEnableEXT = NULL;
	__vkew_vkCmdSetColorWriteEnableEXT = NULL;
	__vkew_vkCmdDrawMultiEXT = NULL;
	__vkew_vkCmdDrawMultiIndexedEXT = NULL;
	__vkew_vkSetDeviceMemoryPriorityEXT = NULL;
	__vkew_vkGetDeviceBufferMemoryRequirementsKHR = NULL;
	__vkew_vkGetDeviceImageMemoryRequirementsKHR = NULL;
	__vkew_vkGetDeviceImageSparseMemoryRequirementsKHR = NULL;
	#ifdef VK_USE_PLATFORM_ANDROID
		__vkew_vkGetAndroidHardwareBufferPropertiesANDROID = NULL;
	#endif //android
	#ifdef VK_USE_PLATFORM_ANDROID
		__vkew_vkGetMemoryAndroidHardwareBufferANDROID = NULL;
	#endif //android
	#ifdef VK_USE_PLATFORM_WIN32
		__vkew_vkGetMemoryWin32HandleNV = NULL;
	#endif //win32
	#ifdef VK_USE_PLATFORM_WIN32
		__vkew_vkGetMemoryWin32HandleKHR = NULL;
	#endif //win32
	#ifdef VK_USE_PLATFORM_WIN32
		__vkew_vkGetMemoryWin32HandlePropertiesKHR = NULL;
	#endif //win32
	#ifdef VK_USE_PLATFORM_WIN32
		__vkew_vkImportSemaphoreWin32HandleKHR = NULL;
	#endif //win32
	#ifdef VK_USE_PLATFORM_WIN32
		__vkew_vkGetSemaphoreWin32HandleKHR = NULL;
	#endif //win32
	#ifdef VK_USE_PLATFORM_WIN32
		__vkew_vkImportFenceWin32HandleKHR = NULL;
	#endif //win32
	#ifdef VK_USE_PLATFORM_WIN32
		__vkew_vkGetFenceWin32HandleKHR = NULL;
	#endif //win32
	#ifdef VK_USE_PLATFORM_WIN32
		__vkew_vkGetPhysicalDeviceSurfacePresentModes2EXT = NULL;
	#endif //win32
	#ifdef VK_USE_PLATFORM_WIN32
		__vkew_vkAcquireFullScreenExclusiveModeEXT = NULL;
	#endif //win32
	#ifdef VK_USE_PLATFORM_WIN32
		__vkew_vkReleaseFullScreenExclusiveModeEXT = NULL;
	#endif //win32
	#ifdef VK_USE_PLATFORM_WIN32
		__vkew_vkAcquireWinrtDisplayNV = NULL;
	#endif //win32
	#ifdef VK_USE_PLATFORM_WIN32
		__vkew_vkGetWinrtDisplayNV = NULL;
	#endif //win32
	#ifdef VK_USE_PLATFORM_PROVISIONAL
		__vkew_vkGetPhysicalDeviceVideoCapabilitiesKHR = NULL;
	#endif //provisional
	#ifdef VK_USE_PLATFORM_PROVISIONAL
		__vkew_vkGetPhysicalDeviceVideoFormatPropertiesKHR = NULL;
	#endif //provisional
	#ifdef VK_USE_PLATFORM_PROVISIONAL
		__vkew_vkCreateVideoSessionKHR = NULL;
	#endif //provisional
	#ifdef VK_USE_PLATFORM_PROVISIONAL
		__vkew_vkDestroyVideoSessionKHR = NULL;
	#endif //provisional
	#ifdef VK_USE_PLATFORM_PROVISIONAL
		__vkew_vkGetVideoSessionMemoryRequirementsKHR = NULL;
	#endif //provisional
	#ifdef VK_USE_PLATFORM_PROVISIONAL
		__vkew_vkBindVideoSessionMemoryKHR = NULL;
	#endif //provisional
	#ifdef VK_USE_PLATFORM_PROVISIONAL
		__vkew_vkCreateVideoSessionParametersKHR = NULL;
	#endif //provisional
	#ifdef VK_USE_PLATFORM_PROVISIONAL
		__vkew_vkUpdateVideoSessionParametersKHR = NULL;
	#endif //provisional
	#ifdef VK_USE_PLATFORM_PROVISIONAL
		__vkew_vkDestroyVideoSessionParametersKHR = NULL;
	#endif //provisional
	#ifdef VK_USE_PLATFORM_PROVISIONAL
		__vkew_vkCmdBeginVideoCodingKHR = NULL;
	#endif //provisional
	#ifdef VK_USE_PLATFORM_PROVISIONAL
		__vkew_vkCmdEndVideoCodingKHR = NULL;
	#endif //provisional
	#ifdef VK_USE_PLATFORM_PROVISIONAL
		__vkew_vkCmdControlVideoCodingKHR = NULL;
	#endif //provisional
	#ifdef VK_USE_PLATFORM_PROVISIONAL
		__vkew_vkCmdDecodeVideoKHR = NULL;
	#endif //provisional
	#ifdef VK_USE_PLATFORM_PROVISIONAL
		__vkew_vkCmdEncodeVideoKHR = NULL;
	#endif //provisional
	#ifdef VK_USE_PLATFORM_FUCHSIA
		__vkew_vkGetMemoryZirconHandleFUCHSIA = NULL;
	#endif //fuchsia
	#ifdef VK_USE_PLATFORM_FUCHSIA
		__vkew_vkGetMemoryZirconHandlePropertiesFUCHSIA = NULL;
	#endif //fuchsia
	#ifdef VK_USE_PLATFORM_FUCHSIA
		__vkew_vkImportSemaphoreZirconHandleFUCHSIA = NULL;
	#endif //fuchsia
	#ifdef VK_USE_PLATFORM_FUCHSIA
		__vkew_vkGetSemaphoreZirconHandleFUCHSIA = NULL;
	#endif //fuchsia
	#ifdef VK_USE_PLATFORM_FUCHSIA
		__vkew_vkCreateBufferCollectionFUCHSIA = NULL;
	#endif //fuchsia
	#ifdef VK_USE_PLATFORM_FUCHSIA
		__vkew_vkSetBufferCollectionImageConstraintsFUCHSIA = NULL;
	#endif //fuchsia
	#ifdef VK_USE_PLATFORM_FUCHSIA
		__vkew_vkSetBufferCollectionBufferConstraintsFUCHSIA = NULL;
	#endif //fuchsia
	#ifdef VK_USE_PLATFORM_FUCHSIA
		__vkew_vkDestroyBufferCollectionFUCHSIA = NULL;
	#endif //fuchsia
	#ifdef VK_USE_PLATFORM_FUCHSIA
		__vkew_vkGetBufferCollectionPropertiesFUCHSIA = NULL;
	#endif //fuchsia
}


// Instance macro stub calls
	#define vkDestroySurfaceKHR VKEW_GET_FUN(__vkew_vkDestroySurfaceKHR)
	#define vkGetPhysicalDeviceSurfaceSupportKHR VKEW_GET_FUN(__vkew_vkGetPhysicalDeviceSurfaceSupportKHR)
	#define vkGetPhysicalDeviceSurfaceCapabilitiesKHR VKEW_GET_FUN(__vkew_vkGetPhysicalDeviceSurfaceCapabilitiesKHR)
	#define vkGetPhysicalDeviceSurfaceFormatsKHR VKEW_GET_FUN(__vkew_vkGetPhysicalDeviceSurfaceFormatsKHR)
	#define vkGetPhysicalDeviceSurfacePresentModesKHR VKEW_GET_FUN(__vkew_vkGetPhysicalDeviceSurfacePresentModesKHR)
	#define vkGetPhysicalDeviceDisplayPropertiesKHR VKEW_GET_FUN(__vkew_vkGetPhysicalDeviceDisplayPropertiesKHR)
	#define vkGetPhysicalDeviceDisplayPlanePropertiesKHR VKEW_GET_FUN(__vkew_vkGetPhysicalDeviceDisplayPlanePropertiesKHR)
	#define vkGetDisplayPlaneSupportedDisplaysKHR VKEW_GET_FUN(__vkew_vkGetDisplayPlaneSupportedDisplaysKHR)
	#define vkGetDisplayModePropertiesKHR VKEW_GET_FUN(__vkew_vkGetDisplayModePropertiesKHR)
	#define vkCreateDisplayModeKHR VKEW_GET_FUN(__vkew_vkCreateDisplayModeKHR)
	#define vkGetDisplayPlaneCapabilitiesKHR VKEW_GET_FUN(__vkew_vkGetDisplayPlaneCapabilitiesKHR)
	#define vkCreateDisplayPlaneSurfaceKHR VKEW_GET_FUN(__vkew_vkCreateDisplayPlaneSurfaceKHR)
	#define vkCreateDebugReportCallbackEXT VKEW_GET_FUN(__vkew_vkCreateDebugReportCallbackEXT)
	#define vkDestroyDebugReportCallbackEXT VKEW_GET_FUN(__vkew_vkDestroyDebugReportCallbackEXT)
	#define vkDebugReportMessageEXT VKEW_GET_FUN(__vkew_vkDebugReportMessageEXT)
	#define vkGetPhysicalDeviceExternalImageFormatPropertiesNV VKEW_GET_FUN(__vkew_vkGetPhysicalDeviceExternalImageFormatPropertiesNV)
	#define vkGetPhysicalDeviceFeatures2KHR VKEW_GET_FUN(__vkew_vkGetPhysicalDeviceFeatures2KHR)
	#define vkGetPhysicalDeviceProperties2KHR VKEW_GET_FUN(__vkew_vkGetPhysicalDeviceProperties2KHR)
	#define vkGetPhysicalDeviceFormatProperties2KHR VKEW_GET_FUN(__vkew_vkGetPhysicalDeviceFormatProperties2KHR)
	#define vkGetPhysicalDeviceImageFormatProperties2KHR VKEW_GET_FUN(__vkew_vkGetPhysicalDeviceImageFormatProperties2KHR)
	#define vkGetPhysicalDeviceQueueFamilyProperties2KHR VKEW_GET_FUN(__vkew_vkGetPhysicalDeviceQueueFamilyProperties2KHR)
	#define vkGetPhysicalDeviceMemoryProperties2KHR VKEW_GET_FUN(__vkew_vkGetPhysicalDeviceMemoryProperties2KHR)
	#define vkGetPhysicalDeviceSparseImageFormatProperties2KHR VKEW_GET_FUN(__vkew_vkGetPhysicalDeviceSparseImageFormatProperties2KHR)
	#define vkEnumeratePhysicalDeviceGroupsKHR VKEW_GET_FUN(__vkew_vkEnumeratePhysicalDeviceGroupsKHR)
	#define vkGetPhysicalDeviceExternalBufferPropertiesKHR VKEW_GET_FUN(__vkew_vkGetPhysicalDeviceExternalBufferPropertiesKHR)
	#define vkGetPhysicalDeviceExternalSemaphorePropertiesKHR VKEW_GET_FUN(__vkew_vkGetPhysicalDeviceExternalSemaphorePropertiesKHR)
	#define vkReleaseDisplayEXT VKEW_GET_FUN(__vkew_vkReleaseDisplayEXT)
	#define vkGetPhysicalDeviceSurfaceCapabilities2EXT VKEW_GET_FUN(__vkew_vkGetPhysicalDeviceSurfaceCapabilities2EXT)
	#define vkGetPhysicalDeviceExternalFencePropertiesKHR VKEW_GET_FUN(__vkew_vkGetPhysicalDeviceExternalFencePropertiesKHR)
	#define vkGetPhysicalDeviceSurfaceCapabilities2KHR VKEW_GET_FUN(__vkew_vkGetPhysicalDeviceSurfaceCapabilities2KHR)
	#define vkGetPhysicalDeviceSurfaceFormats2KHR VKEW_GET_FUN(__vkew_vkGetPhysicalDeviceSurfaceFormats2KHR)
	#define vkGetPhysicalDeviceDisplayProperties2KHR VKEW_GET_FUN(__vkew_vkGetPhysicalDeviceDisplayProperties2KHR)
	#define vkGetPhysicalDeviceDisplayPlaneProperties2KHR VKEW_GET_FUN(__vkew_vkGetPhysicalDeviceDisplayPlaneProperties2KHR)
	#define vkGetDisplayModeProperties2KHR VKEW_GET_FUN(__vkew_vkGetDisplayModeProperties2KHR)
	#define vkGetDisplayPlaneCapabilities2KHR VKEW_GET_FUN(__vkew_vkGetDisplayPlaneCapabilities2KHR)
	#define vkSetDebugUtilsObjectNameEXT VKEW_GET_FUN(__vkew_vkSetDebugUtilsObjectNameEXT)
	#define vkSetDebugUtilsObjectTagEXT VKEW_GET_FUN(__vkew_vkSetDebugUtilsObjectTagEXT)
	#define vkQueueBeginDebugUtilsLabelEXT VKEW_GET_FUN(__vkew_vkQueueBeginDebugUtilsLabelEXT)
	#define vkQueueEndDebugUtilsLabelEXT VKEW_GET_FUN(__vkew_vkQueueEndDebugUtilsLabelEXT)
	#define vkQueueInsertDebugUtilsLabelEXT VKEW_GET_FUN(__vkew_vkQueueInsertDebugUtilsLabelEXT)
	#define vkCmdBeginDebugUtilsLabelEXT VKEW_GET_FUN(__vkew_vkCmdBeginDebugUtilsLabelEXT)
	#define vkCmdEndDebugUtilsLabelEXT VKEW_GET_FUN(__vkew_vkCmdEndDebugUtilsLabelEXT)
	#define vkCmdInsertDebugUtilsLabelEXT VKEW_GET_FUN(__vkew_vkCmdInsertDebugUtilsLabelEXT)
	#define vkCreateDebugUtilsMessengerEXT VKEW_GET_FUN(__vkew_vkCreateDebugUtilsMessengerEXT)
	#define vkDestroyDebugUtilsMessengerEXT VKEW_GET_FUN(__vkew_vkDestroyDebugUtilsMessengerEXT)
	#define vkSubmitDebugUtilsMessageEXT VKEW_GET_FUN(__vkew_vkSubmitDebugUtilsMessageEXT)
	#define vkCreateHeadlessSurfaceEXT VKEW_GET_FUN(__vkew_vkCreateHeadlessSurfaceEXT)
	#define vkAcquireDrmDisplayEXT VKEW_GET_FUN(__vkew_vkAcquireDrmDisplayEXT)
	#define vkGetDrmDisplayEXT VKEW_GET_FUN(__vkew_vkGetDrmDisplayEXT)
	#ifdef VK_USE_PLATFORM_XLIB
		#define vkCreateXlibSurfaceKHR VKEW_GET_FUN(__vkew_vkCreateXlibSurfaceKHR)
	#endif //xlib
	#ifdef VK_USE_PLATFORM_XLIB
		#define vkGetPhysicalDeviceXlibPresentationSupportKHR VKEW_GET_FUN(__vkew_vkGetPhysicalDeviceXlibPresentationSupportKHR)
	#endif //xlib
	#ifdef VK_USE_PLATFORM_XCB
		#define vkCreateXcbSurfaceKHR VKEW_GET_FUN(__vkew_vkCreateXcbSurfaceKHR)
	#endif //xcb
	#ifdef VK_USE_PLATFORM_XCB
		#define vkGetPhysicalDeviceXcbPresentationSupportKHR VKEW_GET_FUN(__vkew_vkGetPhysicalDeviceXcbPresentationSupportKHR)
	#endif //xcb
	#ifdef VK_USE_PLATFORM_WAYLAND
		#define vkCreateWaylandSurfaceKHR VKEW_GET_FUN(__vkew_vkCreateWaylandSurfaceKHR)
	#endif //wayland
	#ifdef VK_USE_PLATFORM_WAYLAND
		#define vkGetPhysicalDeviceWaylandPresentationSupportKHR VKEW_GET_FUN(__vkew_vkGetPhysicalDeviceWaylandPresentationSupportKHR)
	#endif //wayland
	#ifdef VK_USE_PLATFORM_ANDROID
		#define vkCreateAndroidSurfaceKHR VKEW_GET_FUN(__vkew_vkCreateAndroidSurfaceKHR)
	#endif //android
	#ifdef VK_USE_PLATFORM_WIN32
		#define vkCreateWin32SurfaceKHR VKEW_GET_FUN(__vkew_vkCreateWin32SurfaceKHR)
	#endif //win32
	#ifdef VK_USE_PLATFORM_WIN32
		#define vkGetPhysicalDeviceWin32PresentationSupportKHR VKEW_GET_FUN(__vkew_vkGetPhysicalDeviceWin32PresentationSupportKHR)
	#endif //win32
	#ifdef VK_USE_PLATFORM_GGP
		#define vkCreateStreamDescriptorSurfaceGGP VKEW_GET_FUN(__vkew_vkCreateStreamDescriptorSurfaceGGP)
	#endif //ggp
	#ifdef VK_USE_PLATFORM_VI
		#define vkCreateViSurfaceNN VKEW_GET_FUN(__vkew_vkCreateViSurfaceNN)
	#endif //vi
	#ifdef VK_USE_PLATFORM_XLIB_XRANDR
		#define vkAcquireXlibDisplayEXT VKEW_GET_FUN(__vkew_vkAcquireXlibDisplayEXT)
	#endif //xlib_xrandr
	#ifdef VK_USE_PLATFORM_XLIB_XRANDR
		#define vkGetRandROutputDisplayEXT VKEW_GET_FUN(__vkew_vkGetRandROutputDisplayEXT)
	#endif //xlib_xrandr
	#ifdef VK_USE_PLATFORM_IOS
		#define vkCreateIOSSurfaceMVK VKEW_GET_FUN(__vkew_vkCreateIOSSurfaceMVK)
	#endif //ios
	#ifdef VK_USE_PLATFORM_MACOS
		#define vkCreateMacOSSurfaceMVK VKEW_GET_FUN(__vkew_vkCreateMacOSSurfaceMVK)
	#endif //macos
	#ifdef VK_USE_PLATFORM_FUCHSIA
		#define vkCreateImagePipeSurfaceFUCHSIA VKEW_GET_FUN(__vkew_vkCreateImagePipeSurfaceFUCHSIA)
	#endif //fuchsia
	#ifdef VK_USE_PLATFORM_METAL
		#define vkCreateMetalSurfaceEXT VKEW_GET_FUN(__vkew_vkCreateMetalSurfaceEXT)
	#endif //metal
	#ifdef VK_USE_PLATFORM_DIRECTFB
		#define vkCreateDirectFBSurfaceEXT VKEW_GET_FUN(__vkew_vkCreateDirectFBSurfaceEXT)
	#endif //directfb
	#ifdef VK_USE_PLATFORM_DIRECTFB
		#define vkGetPhysicalDeviceDirectFBPresentationSupportEXT VKEW_GET_FUN(__vkew_vkGetPhysicalDeviceDirectFBPresentationSupportEXT)
	#endif //directfb
	#ifdef VK_USE_PLATFORM_SCREEN
		#define vkCreateScreenSurfaceQNX VKEW_GET_FUN(__vkew_vkCreateScreenSurfaceQNX)
	#endif //screen
	#ifdef VK_USE_PLATFORM_SCREEN
		#define vkGetPhysicalDeviceScreenPresentationSupportQNX VKEW_GET_FUN(__vkew_vkGetPhysicalDeviceScreenPresentationSupportQNX)
	#endif //screen
// Instance macro stub calls
	#define vkCreateSwapchainKHR VKEW_GET_FUN(__vkew_vkCreateSwapchainKHR)
	#define vkDestroySwapchainKHR VKEW_GET_FUN(__vkew_vkDestroySwapchainKHR)
	#define vkGetSwapchainImagesKHR VKEW_GET_FUN(__vkew_vkGetSwapchainImagesKHR)
	#define vkAcquireNextImageKHR VKEW_GET_FUN(__vkew_vkAcquireNextImageKHR)
	#define vkQueuePresentKHR VKEW_GET_FUN(__vkew_vkQueuePresentKHR)
	#define vkCreateSharedSwapchainsKHR VKEW_GET_FUN(__vkew_vkCreateSharedSwapchainsKHR)
	#define vkDebugMarkerSetObjectTagEXT VKEW_GET_FUN(__vkew_vkDebugMarkerSetObjectTagEXT)
	#define vkDebugMarkerSetObjectNameEXT VKEW_GET_FUN(__vkew_vkDebugMarkerSetObjectNameEXT)
	#define vkCmdDebugMarkerBeginEXT VKEW_GET_FUN(__vkew_vkCmdDebugMarkerBeginEXT)
	#define vkCmdDebugMarkerEndEXT VKEW_GET_FUN(__vkew_vkCmdDebugMarkerEndEXT)
	#define vkCmdDebugMarkerInsertEXT VKEW_GET_FUN(__vkew_vkCmdDebugMarkerInsertEXT)
	#define vkCmdBindTransformFeedbackBuffersEXT VKEW_GET_FUN(__vkew_vkCmdBindTransformFeedbackBuffersEXT)
	#define vkCmdBeginTransformFeedbackEXT VKEW_GET_FUN(__vkew_vkCmdBeginTransformFeedbackEXT)
	#define vkCmdEndTransformFeedbackEXT VKEW_GET_FUN(__vkew_vkCmdEndTransformFeedbackEXT)
	#define vkCmdBeginQueryIndexedEXT VKEW_GET_FUN(__vkew_vkCmdBeginQueryIndexedEXT)
	#define vkCmdEndQueryIndexedEXT VKEW_GET_FUN(__vkew_vkCmdEndQueryIndexedEXT)
	#define vkCmdDrawIndirectByteCountEXT VKEW_GET_FUN(__vkew_vkCmdDrawIndirectByteCountEXT)
	#define vkCreateCuModuleNVX VKEW_GET_FUN(__vkew_vkCreateCuModuleNVX)
	#define vkCreateCuFunctionNVX VKEW_GET_FUN(__vkew_vkCreateCuFunctionNVX)
	#define vkDestroyCuModuleNVX VKEW_GET_FUN(__vkew_vkDestroyCuModuleNVX)
	#define vkDestroyCuFunctionNVX VKEW_GET_FUN(__vkew_vkDestroyCuFunctionNVX)
	#define vkCmdCuLaunchKernelNVX VKEW_GET_FUN(__vkew_vkCmdCuLaunchKernelNVX)
	#define vkGetImageViewHandleNVX VKEW_GET_FUN(__vkew_vkGetImageViewHandleNVX)
	#define vkGetImageViewAddressNVX VKEW_GET_FUN(__vkew_vkGetImageViewAddressNVX)
	#define vkCmdDrawIndirectCountAMD VKEW_GET_FUN(__vkew_vkCmdDrawIndirectCountAMD)
	#define vkCmdDrawIndexedIndirectCountAMD VKEW_GET_FUN(__vkew_vkCmdDrawIndexedIndirectCountAMD)
	#define vkGetShaderInfoAMD VKEW_GET_FUN(__vkew_vkGetShaderInfoAMD)
	#define vkCmdBeginRenderingKHR VKEW_GET_FUN(__vkew_vkCmdBeginRenderingKHR)
	#define vkCmdEndRenderingKHR VKEW_GET_FUN(__vkew_vkCmdEndRenderingKHR)
	#define vkGetDeviceGroupPeerMemoryFeaturesKHR VKEW_GET_FUN(__vkew_vkGetDeviceGroupPeerMemoryFeaturesKHR)
	#define vkCmdSetDeviceMaskKHR VKEW_GET_FUN(__vkew_vkCmdSetDeviceMaskKHR)
	#define vkCmdDispatchBaseKHR VKEW_GET_FUN(__vkew_vkCmdDispatchBaseKHR)
	#define vkTrimCommandPoolKHR VKEW_GET_FUN(__vkew_vkTrimCommandPoolKHR)
	#define vkGetMemoryFdKHR VKEW_GET_FUN(__vkew_vkGetMemoryFdKHR)
	#define vkGetMemoryFdPropertiesKHR VKEW_GET_FUN(__vkew_vkGetMemoryFdPropertiesKHR)
	#define vkImportSemaphoreFdKHR VKEW_GET_FUN(__vkew_vkImportSemaphoreFdKHR)
	#define vkGetSemaphoreFdKHR VKEW_GET_FUN(__vkew_vkGetSemaphoreFdKHR)
	#define vkCmdPushDescriptorSetKHR VKEW_GET_FUN(__vkew_vkCmdPushDescriptorSetKHR)
	#define vkCmdBeginConditionalRenderingEXT VKEW_GET_FUN(__vkew_vkCmdBeginConditionalRenderingEXT)
	#define vkCmdEndConditionalRenderingEXT VKEW_GET_FUN(__vkew_vkCmdEndConditionalRenderingEXT)
	#define vkCreateDescriptorUpdateTemplateKHR VKEW_GET_FUN(__vkew_vkCreateDescriptorUpdateTemplateKHR)
	#define vkDestroyDescriptorUpdateTemplateKHR VKEW_GET_FUN(__vkew_vkDestroyDescriptorUpdateTemplateKHR)
	#define vkUpdateDescriptorSetWithTemplateKHR VKEW_GET_FUN(__vkew_vkUpdateDescriptorSetWithTemplateKHR)
	#define vkCmdSetViewportWScalingNV VKEW_GET_FUN(__vkew_vkCmdSetViewportWScalingNV)
	#define vkDisplayPowerControlEXT VKEW_GET_FUN(__vkew_vkDisplayPowerControlEXT)
	#define vkRegisterDeviceEventEXT VKEW_GET_FUN(__vkew_vkRegisterDeviceEventEXT)
	#define vkRegisterDisplayEventEXT VKEW_GET_FUN(__vkew_vkRegisterDisplayEventEXT)
	#define vkGetSwapchainCounterEXT VKEW_GET_FUN(__vkew_vkGetSwapchainCounterEXT)
	#define vkGetRefreshCycleDurationGOOGLE VKEW_GET_FUN(__vkew_vkGetRefreshCycleDurationGOOGLE)
	#define vkGetPastPresentationTimingGOOGLE VKEW_GET_FUN(__vkew_vkGetPastPresentationTimingGOOGLE)
	#define vkCmdSetDiscardRectangleEXT VKEW_GET_FUN(__vkew_vkCmdSetDiscardRectangleEXT)
	#define vkSetHdrMetadataEXT VKEW_GET_FUN(__vkew_vkSetHdrMetadataEXT)
	#define vkCreateRenderPass2KHR VKEW_GET_FUN(__vkew_vkCreateRenderPass2KHR)
	#define vkCmdBeginRenderPass2KHR VKEW_GET_FUN(__vkew_vkCmdBeginRenderPass2KHR)
	#define vkCmdNextSubpass2KHR VKEW_GET_FUN(__vkew_vkCmdNextSubpass2KHR)
	#define vkCmdEndRenderPass2KHR VKEW_GET_FUN(__vkew_vkCmdEndRenderPass2KHR)
	#define vkGetSwapchainStatusKHR VKEW_GET_FUN(__vkew_vkGetSwapchainStatusKHR)
	#define vkImportFenceFdKHR VKEW_GET_FUN(__vkew_vkImportFenceFdKHR)
	#define vkGetFenceFdKHR VKEW_GET_FUN(__vkew_vkGetFenceFdKHR)
	#define vkEnumeratePhysicalDeviceQueueFamilyPerformanceQueryCountersKHR VKEW_GET_FUN(__vkew_vkEnumeratePhysicalDeviceQueueFamilyPerformanceQueryCountersKHR)
	#define vkGetPhysicalDeviceQueueFamilyPerformanceQueryPassesKHR VKEW_GET_FUN(__vkew_vkGetPhysicalDeviceQueueFamilyPerformanceQueryPassesKHR)
	#define vkAcquireProfilingLockKHR VKEW_GET_FUN(__vkew_vkAcquireProfilingLockKHR)
	#define vkReleaseProfilingLockKHR VKEW_GET_FUN(__vkew_vkReleaseProfilingLockKHR)
	#define vkCmdSetSampleLocationsEXT VKEW_GET_FUN(__vkew_vkCmdSetSampleLocationsEXT)
	#define vkGetPhysicalDeviceMultisamplePropertiesEXT VKEW_GET_FUN(__vkew_vkGetPhysicalDeviceMultisamplePropertiesEXT)
	#define vkGetImageMemoryRequirements2KHR VKEW_GET_FUN(__vkew_vkGetImageMemoryRequirements2KHR)
	#define vkGetBufferMemoryRequirements2KHR VKEW_GET_FUN(__vkew_vkGetBufferMemoryRequirements2KHR)
	#define vkGetImageSparseMemoryRequirements2KHR VKEW_GET_FUN(__vkew_vkGetImageSparseMemoryRequirements2KHR)
	#define vkCreateAccelerationStructureKHR VKEW_GET_FUN(__vkew_vkCreateAccelerationStructureKHR)
	#define vkDestroyAccelerationStructureKHR VKEW_GET_FUN(__vkew_vkDestroyAccelerationStructureKHR)
	#define vkCmdBuildAccelerationStructuresKHR VKEW_GET_FUN(__vkew_vkCmdBuildAccelerationStructuresKHR)
	#define vkCmdBuildAccelerationStructuresIndirectKHR VKEW_GET_FUN(__vkew_vkCmdBuildAccelerationStructuresIndirectKHR)
	#define vkBuildAccelerationStructuresKHR VKEW_GET_FUN(__vkew_vkBuildAccelerationStructuresKHR)
	#define vkCopyAccelerationStructureKHR VKEW_GET_FUN(__vkew_vkCopyAccelerationStructureKHR)
	#define vkCopyAccelerationStructureToMemoryKHR VKEW_GET_FUN(__vkew_vkCopyAccelerationStructureToMemoryKHR)
	#define vkCopyMemoryToAccelerationStructureKHR VKEW_GET_FUN(__vkew_vkCopyMemoryToAccelerationStructureKHR)
	#define vkWriteAccelerationStructuresPropertiesKHR VKEW_GET_FUN(__vkew_vkWriteAccelerationStructuresPropertiesKHR)
	#define vkCmdCopyAccelerationStructureKHR VKEW_GET_FUN(__vkew_vkCmdCopyAccelerationStructureKHR)
	#define vkCmdCopyAccelerationStructureToMemoryKHR VKEW_GET_FUN(__vkew_vkCmdCopyAccelerationStructureToMemoryKHR)
	#define vkCmdCopyMemoryToAccelerationStructureKHR VKEW_GET_FUN(__vkew_vkCmdCopyMemoryToAccelerationStructureKHR)
	#define vkGetAccelerationStructureDeviceAddressKHR VKEW_GET_FUN(__vkew_vkGetAccelerationStructureDeviceAddressKHR)
	#define vkCmdWriteAccelerationStructuresPropertiesKHR VKEW_GET_FUN(__vkew_vkCmdWriteAccelerationStructuresPropertiesKHR)
	#define vkGetDeviceAccelerationStructureCompatibilityKHR VKEW_GET_FUN(__vkew_vkGetDeviceAccelerationStructureCompatibilityKHR)
	#define vkGetAccelerationStructureBuildSizesKHR VKEW_GET_FUN(__vkew_vkGetAccelerationStructureBuildSizesKHR)
	#define vkCmdTraceRaysKHR VKEW_GET_FUN(__vkew_vkCmdTraceRaysKHR)
	#define vkCreateRayTracingPipelinesKHR VKEW_GET_FUN(__vkew_vkCreateRayTracingPipelinesKHR)
	#define vkGetRayTracingShaderGroupHandlesKHR VKEW_GET_FUN(__vkew_vkGetRayTracingShaderGroupHandlesKHR)
	#define vkGetRayTracingCaptureReplayShaderGroupHandlesKHR VKEW_GET_FUN(__vkew_vkGetRayTracingCaptureReplayShaderGroupHandlesKHR)
	#define vkCmdTraceRaysIndirectKHR VKEW_GET_FUN(__vkew_vkCmdTraceRaysIndirectKHR)
	#define vkGetRayTracingShaderGroupStackSizeKHR VKEW_GET_FUN(__vkew_vkGetRayTracingShaderGroupStackSizeKHR)
	#define vkCmdSetRayTracingPipelineStackSizeKHR VKEW_GET_FUN(__vkew_vkCmdSetRayTracingPipelineStackSizeKHR)
	#define vkCreateSamplerYcbcrConversionKHR VKEW_GET_FUN(__vkew_vkCreateSamplerYcbcrConversionKHR)
	#define vkDestroySamplerYcbcrConversionKHR VKEW_GET_FUN(__vkew_vkDestroySamplerYcbcrConversionKHR)
	#define vkBindBufferMemory2KHR VKEW_GET_FUN(__vkew_vkBindBufferMemory2KHR)
	#define vkBindImageMemory2KHR VKEW_GET_FUN(__vkew_vkBindImageMemory2KHR)
	#define vkGetImageDrmFormatModifierPropertiesEXT VKEW_GET_FUN(__vkew_vkGetImageDrmFormatModifierPropertiesEXT)
	#define vkCreateValidationCacheEXT VKEW_GET_FUN(__vkew_vkCreateValidationCacheEXT)
	#define vkDestroyValidationCacheEXT VKEW_GET_FUN(__vkew_vkDestroyValidationCacheEXT)
	#define vkMergeValidationCachesEXT VKEW_GET_FUN(__vkew_vkMergeValidationCachesEXT)
	#define vkGetValidationCacheDataEXT VKEW_GET_FUN(__vkew_vkGetValidationCacheDataEXT)
	#define vkCmdBindShadingRateImageNV VKEW_GET_FUN(__vkew_vkCmdBindShadingRateImageNV)
	#define vkCmdSetViewportShadingRatePaletteNV VKEW_GET_FUN(__vkew_vkCmdSetViewportShadingRatePaletteNV)
	#define vkCmdSetCoarseSampleOrderNV VKEW_GET_FUN(__vkew_vkCmdSetCoarseSampleOrderNV)
	#define vkCreateAccelerationStructureNV VKEW_GET_FUN(__vkew_vkCreateAccelerationStructureNV)
	#define vkDestroyAccelerationStructureNV VKEW_GET_FUN(__vkew_vkDestroyAccelerationStructureNV)
	#define vkGetAccelerationStructureMemoryRequirementsNV VKEW_GET_FUN(__vkew_vkGetAccelerationStructureMemoryRequirementsNV)
	#define vkBindAccelerationStructureMemoryNV VKEW_GET_FUN(__vkew_vkBindAccelerationStructureMemoryNV)
	#define vkCmdBuildAccelerationStructureNV VKEW_GET_FUN(__vkew_vkCmdBuildAccelerationStructureNV)
	#define vkCmdCopyAccelerationStructureNV VKEW_GET_FUN(__vkew_vkCmdCopyAccelerationStructureNV)
	#define vkCmdTraceRaysNV VKEW_GET_FUN(__vkew_vkCmdTraceRaysNV)
	#define vkCreateRayTracingPipelinesNV VKEW_GET_FUN(__vkew_vkCreateRayTracingPipelinesNV)
	#define vkGetRayTracingShaderGroupHandlesNV VKEW_GET_FUN(__vkew_vkGetRayTracingShaderGroupHandlesNV)
	#define vkGetAccelerationStructureHandleNV VKEW_GET_FUN(__vkew_vkGetAccelerationStructureHandleNV)
	#define vkCmdWriteAccelerationStructuresPropertiesNV VKEW_GET_FUN(__vkew_vkCmdWriteAccelerationStructuresPropertiesNV)
	#define vkCompileDeferredNV VKEW_GET_FUN(__vkew_vkCompileDeferredNV)
	#define vkGetDescriptorSetLayoutSupportKHR VKEW_GET_FUN(__vkew_vkGetDescriptorSetLayoutSupportKHR)
	#define vkCmdDrawIndirectCountKHR VKEW_GET_FUN(__vkew_vkCmdDrawIndirectCountKHR)
	#define vkCmdDrawIndexedIndirectCountKHR VKEW_GET_FUN(__vkew_vkCmdDrawIndexedIndirectCountKHR)
	#define vkGetMemoryHostPointerPropertiesEXT VKEW_GET_FUN(__vkew_vkGetMemoryHostPointerPropertiesEXT)
	#define vkCmdWriteBufferMarkerAMD VKEW_GET_FUN(__vkew_vkCmdWriteBufferMarkerAMD)
	#define vkGetPhysicalDeviceCalibrateableTimeDomainsEXT VKEW_GET_FUN(__vkew_vkGetPhysicalDeviceCalibrateableTimeDomainsEXT)
	#define vkGetCalibratedTimestampsEXT VKEW_GET_FUN(__vkew_vkGetCalibratedTimestampsEXT)
	#define vkCmdDrawMeshTasksNV VKEW_GET_FUN(__vkew_vkCmdDrawMeshTasksNV)
	#define vkCmdDrawMeshTasksIndirectNV VKEW_GET_FUN(__vkew_vkCmdDrawMeshTasksIndirectNV)
	#define vkCmdDrawMeshTasksIndirectCountNV VKEW_GET_FUN(__vkew_vkCmdDrawMeshTasksIndirectCountNV)
	#define vkCmdSetExclusiveScissorNV VKEW_GET_FUN(__vkew_vkCmdSetExclusiveScissorNV)
	#define vkCmdSetCheckpointNV VKEW_GET_FUN(__vkew_vkCmdSetCheckpointNV)
	#define vkGetQueueCheckpointDataNV VKEW_GET_FUN(__vkew_vkGetQueueCheckpointDataNV)
	#define vkGetSemaphoreCounterValueKHR VKEW_GET_FUN(__vkew_vkGetSemaphoreCounterValueKHR)
	#define vkWaitSemaphoresKHR VKEW_GET_FUN(__vkew_vkWaitSemaphoresKHR)
	#define vkSignalSemaphoreKHR VKEW_GET_FUN(__vkew_vkSignalSemaphoreKHR)
	#define vkInitializePerformanceApiINTEL VKEW_GET_FUN(__vkew_vkInitializePerformanceApiINTEL)
	#define vkUninitializePerformanceApiINTEL VKEW_GET_FUN(__vkew_vkUninitializePerformanceApiINTEL)
	#define vkCmdSetPerformanceMarkerINTEL VKEW_GET_FUN(__vkew_vkCmdSetPerformanceMarkerINTEL)
	#define vkCmdSetPerformanceStreamMarkerINTEL VKEW_GET_FUN(__vkew_vkCmdSetPerformanceStreamMarkerINTEL)
	#define vkCmdSetPerformanceOverrideINTEL VKEW_GET_FUN(__vkew_vkCmdSetPerformanceOverrideINTEL)
	#define vkAcquirePerformanceConfigurationINTEL VKEW_GET_FUN(__vkew_vkAcquirePerformanceConfigurationINTEL)
	#define vkReleasePerformanceConfigurationINTEL VKEW_GET_FUN(__vkew_vkReleasePerformanceConfigurationINTEL)
	#define vkQueueSetPerformanceConfigurationINTEL VKEW_GET_FUN(__vkew_vkQueueSetPerformanceConfigurationINTEL)
	#define vkGetPerformanceParameterINTEL VKEW_GET_FUN(__vkew_vkGetPerformanceParameterINTEL)
	#define vkSetLocalDimmingAMD VKEW_GET_FUN(__vkew_vkSetLocalDimmingAMD)
	#define vkGetPhysicalDeviceFragmentShadingRatesKHR VKEW_GET_FUN(__vkew_vkGetPhysicalDeviceFragmentShadingRatesKHR)
	#define vkCmdSetFragmentShadingRateKHR VKEW_GET_FUN(__vkew_vkCmdSetFragmentShadingRateKHR)
	#define vkGetBufferDeviceAddressEXT VKEW_GET_FUN(__vkew_vkGetBufferDeviceAddressEXT)
	#define vkGetPhysicalDeviceToolPropertiesEXT VKEW_GET_FUN(__vkew_vkGetPhysicalDeviceToolPropertiesEXT)
	#define vkWaitForPresentKHR VKEW_GET_FUN(__vkew_vkWaitForPresentKHR)
	#define vkGetPhysicalDeviceCooperativeMatrixPropertiesNV VKEW_GET_FUN(__vkew_vkGetPhysicalDeviceCooperativeMatrixPropertiesNV)
	#define vkGetPhysicalDeviceSupportedFramebufferMixedSamplesCombinationsNV VKEW_GET_FUN(__vkew_vkGetPhysicalDeviceSupportedFramebufferMixedSamplesCombinationsNV)
	#define vkGetBufferDeviceAddressKHR VKEW_GET_FUN(__vkew_vkGetBufferDeviceAddressKHR)
	#define vkGetBufferOpaqueCaptureAddressKHR VKEW_GET_FUN(__vkew_vkGetBufferOpaqueCaptureAddressKHR)
	#define vkGetDeviceMemoryOpaqueCaptureAddressKHR VKEW_GET_FUN(__vkew_vkGetDeviceMemoryOpaqueCaptureAddressKHR)
	#define vkCmdSetLineStippleEXT VKEW_GET_FUN(__vkew_vkCmdSetLineStippleEXT)
	#define vkResetQueryPoolEXT VKEW_GET_FUN(__vkew_vkResetQueryPoolEXT)
	#define vkCmdSetCullModeEXT VKEW_GET_FUN(__vkew_vkCmdSetCullModeEXT)
	#define vkCmdSetFrontFaceEXT VKEW_GET_FUN(__vkew_vkCmdSetFrontFaceEXT)
	#define vkCmdSetPrimitiveTopologyEXT VKEW_GET_FUN(__vkew_vkCmdSetPrimitiveTopologyEXT)
	#define vkCmdSetViewportWithCountEXT VKEW_GET_FUN(__vkew_vkCmdSetViewportWithCountEXT)
	#define vkCmdSetScissorWithCountEXT VKEW_GET_FUN(__vkew_vkCmdSetScissorWithCountEXT)
	#define vkCmdBindVertexBuffers2EXT VKEW_GET_FUN(__vkew_vkCmdBindVertexBuffers2EXT)
	#define vkCmdSetDepthTestEnableEXT VKEW_GET_FUN(__vkew_vkCmdSetDepthTestEnableEXT)
	#define vkCmdSetDepthWriteEnableEXT VKEW_GET_FUN(__vkew_vkCmdSetDepthWriteEnableEXT)
	#define vkCmdSetDepthCompareOpEXT VKEW_GET_FUN(__vkew_vkCmdSetDepthCompareOpEXT)
	#define vkCmdSetDepthBoundsTestEnableEXT VKEW_GET_FUN(__vkew_vkCmdSetDepthBoundsTestEnableEXT)
	#define vkCmdSetStencilTestEnableEXT VKEW_GET_FUN(__vkew_vkCmdSetStencilTestEnableEXT)
	#define vkCmdSetStencilOpEXT VKEW_GET_FUN(__vkew_vkCmdSetStencilOpEXT)
	#define vkCreateDeferredOperationKHR VKEW_GET_FUN(__vkew_vkCreateDeferredOperationKHR)
	#define vkDestroyDeferredOperationKHR VKEW_GET_FUN(__vkew_vkDestroyDeferredOperationKHR)
	#define vkGetDeferredOperationMaxConcurrencyKHR VKEW_GET_FUN(__vkew_vkGetDeferredOperationMaxConcurrencyKHR)
	#define vkGetDeferredOperationResultKHR VKEW_GET_FUN(__vkew_vkGetDeferredOperationResultKHR)
	#define vkDeferredOperationJoinKHR VKEW_GET_FUN(__vkew_vkDeferredOperationJoinKHR)
	#define vkGetPipelineExecutablePropertiesKHR VKEW_GET_FUN(__vkew_vkGetPipelineExecutablePropertiesKHR)
	#define vkGetPipelineExecutableStatisticsKHR VKEW_GET_FUN(__vkew_vkGetPipelineExecutableStatisticsKHR)
	#define vkGetPipelineExecutableInternalRepresentationsKHR VKEW_GET_FUN(__vkew_vkGetPipelineExecutableInternalRepresentationsKHR)
	#define vkGetGeneratedCommandsMemoryRequirementsNV VKEW_GET_FUN(__vkew_vkGetGeneratedCommandsMemoryRequirementsNV)
	#define vkCmdPreprocessGeneratedCommandsNV VKEW_GET_FUN(__vkew_vkCmdPreprocessGeneratedCommandsNV)
	#define vkCmdExecuteGeneratedCommandsNV VKEW_GET_FUN(__vkew_vkCmdExecuteGeneratedCommandsNV)
	#define vkCmdBindPipelineShaderGroupNV VKEW_GET_FUN(__vkew_vkCmdBindPipelineShaderGroupNV)
	#define vkCreateIndirectCommandsLayoutNV VKEW_GET_FUN(__vkew_vkCreateIndirectCommandsLayoutNV)
	#define vkDestroyIndirectCommandsLayoutNV VKEW_GET_FUN(__vkew_vkDestroyIndirectCommandsLayoutNV)
	#define vkCreatePrivateDataSlotEXT VKEW_GET_FUN(__vkew_vkCreatePrivateDataSlotEXT)
	#define vkDestroyPrivateDataSlotEXT VKEW_GET_FUN(__vkew_vkDestroyPrivateDataSlotEXT)
	#define vkSetPrivateDataEXT VKEW_GET_FUN(__vkew_vkSetPrivateDataEXT)
	#define vkGetPrivateDataEXT VKEW_GET_FUN(__vkew_vkGetPrivateDataEXT)
	#define vkCmdSetEvent2KHR VKEW_GET_FUN(__vkew_vkCmdSetEvent2KHR)
	#define vkCmdResetEvent2KHR VKEW_GET_FUN(__vkew_vkCmdResetEvent2KHR)
	#define vkCmdWaitEvents2KHR VKEW_GET_FUN(__vkew_vkCmdWaitEvents2KHR)
	#define vkCmdPipelineBarrier2KHR VKEW_GET_FUN(__vkew_vkCmdPipelineBarrier2KHR)
	#define vkCmdWriteTimestamp2KHR VKEW_GET_FUN(__vkew_vkCmdWriteTimestamp2KHR)
	#define vkQueueSubmit2KHR VKEW_GET_FUN(__vkew_vkQueueSubmit2KHR)
	#define vkCmdSetFragmentShadingRateEnumNV VKEW_GET_FUN(__vkew_vkCmdSetFragmentShadingRateEnumNV)
	#define vkCmdCopyBuffer2KHR VKEW_GET_FUN(__vkew_vkCmdCopyBuffer2KHR)
	#define vkCmdCopyImage2KHR VKEW_GET_FUN(__vkew_vkCmdCopyImage2KHR)
	#define vkCmdCopyBufferToImage2KHR VKEW_GET_FUN(__vkew_vkCmdCopyBufferToImage2KHR)
	#define vkCmdCopyImageToBuffer2KHR VKEW_GET_FUN(__vkew_vkCmdCopyImageToBuffer2KHR)
	#define vkCmdBlitImage2KHR VKEW_GET_FUN(__vkew_vkCmdBlitImage2KHR)
	#define vkCmdResolveImage2KHR VKEW_GET_FUN(__vkew_vkCmdResolveImage2KHR)
	#define vkCmdSetVertexInputEXT VKEW_GET_FUN(__vkew_vkCmdSetVertexInputEXT)
	#define vkGetDeviceSubpassShadingMaxWorkgroupSizeHUAWEI VKEW_GET_FUN(__vkew_vkGetDeviceSubpassShadingMaxWorkgroupSizeHUAWEI)
	#define vkCmdSubpassShadingHUAWEI VKEW_GET_FUN(__vkew_vkCmdSubpassShadingHUAWEI)
	#define vkCmdBindInvocationMaskHUAWEI VKEW_GET_FUN(__vkew_vkCmdBindInvocationMaskHUAWEI)
	#define vkGetMemoryRemoteAddressNV VKEW_GET_FUN(__vkew_vkGetMemoryRemoteAddressNV)
	#define vkCmdSetPatchControlPointsEXT VKEW_GET_FUN(__vkew_vkCmdSetPatchControlPointsEXT)
	#define vkCmdSetRasterizerDiscardEnableEXT VKEW_GET_FUN(__vkew_vkCmdSetRasterizerDiscardEnableEXT)
	#define vkCmdSetDepthBiasEnableEXT VKEW_GET_FUN(__vkew_vkCmdSetDepthBiasEnableEXT)
	#define vkCmdSetLogicOpEXT VKEW_GET_FUN(__vkew_vkCmdSetLogicOpEXT)
	#define vkCmdSetPrimitiveRestartEnableEXT VKEW_GET_FUN(__vkew_vkCmdSetPrimitiveRestartEnableEXT)
	#define vkCmdSetColorWriteEnableEXT VKEW_GET_FUN(__vkew_vkCmdSetColorWriteEnableEXT)
	#define vkCmdDrawMultiEXT VKEW_GET_FUN(__vkew_vkCmdDrawMultiEXT)
	#define vkCmdDrawMultiIndexedEXT VKEW_GET_FUN(__vkew_vkCmdDrawMultiIndexedEXT)
	#define vkSetDeviceMemoryPriorityEXT VKEW_GET_FUN(__vkew_vkSetDeviceMemoryPriorityEXT)
	#define vkGetDeviceBufferMemoryRequirementsKHR VKEW_GET_FUN(__vkew_vkGetDeviceBufferMemoryRequirementsKHR)
	#define vkGetDeviceImageMemoryRequirementsKHR VKEW_GET_FUN(__vkew_vkGetDeviceImageMemoryRequirementsKHR)
	#define vkGetDeviceImageSparseMemoryRequirementsKHR VKEW_GET_FUN(__vkew_vkGetDeviceImageSparseMemoryRequirementsKHR)
	#ifdef VK_USE_PLATFORM_ANDROID
		#define vkGetAndroidHardwareBufferPropertiesANDROID VKEW_GET_FUN(__vkew_vkGetAndroidHardwareBufferPropertiesANDROID)
	#endif //android
	#ifdef VK_USE_PLATFORM_ANDROID
		#define vkGetMemoryAndroidHardwareBufferANDROID VKEW_GET_FUN(__vkew_vkGetMemoryAndroidHardwareBufferANDROID)
	#endif //android
	#ifdef VK_USE_PLATFORM_WIN32
		#define vkGetMemoryWin32HandleNV VKEW_GET_FUN(__vkew_vkGetMemoryWin32HandleNV)
	#endif //win32
	#ifdef VK_USE_PLATFORM_WIN32
		#define vkGetMemoryWin32HandleKHR VKEW_GET_FUN(__vkew_vkGetMemoryWin32HandleKHR)
	#endif //win32
	#ifdef VK_USE_PLATFORM_WIN32
		#define vkGetMemoryWin32HandlePropertiesKHR VKEW_GET_FUN(__vkew_vkGetMemoryWin32HandlePropertiesKHR)
	#endif //win32
	#ifdef VK_USE_PLATFORM_WIN32
		#define vkImportSemaphoreWin32HandleKHR VKEW_GET_FUN(__vkew_vkImportSemaphoreWin32HandleKHR)
	#endif //win32
	#ifdef VK_USE_PLATFORM_WIN32
		#define vkGetSemaphoreWin32HandleKHR VKEW_GET_FUN(__vkew_vkGetSemaphoreWin32HandleKHR)
	#endif //win32
	#ifdef VK_USE_PLATFORM_WIN32
		#define vkImportFenceWin32HandleKHR VKEW_GET_FUN(__vkew_vkImportFenceWin32HandleKHR)
	#endif //win32
	#ifdef VK_USE_PLATFORM_WIN32
		#define vkGetFenceWin32HandleKHR VKEW_GET_FUN(__vkew_vkGetFenceWin32HandleKHR)
	#endif //win32
	#ifdef VK_USE_PLATFORM_WIN32
		#define vkGetPhysicalDeviceSurfacePresentModes2EXT VKEW_GET_FUN(__vkew_vkGetPhysicalDeviceSurfacePresentModes2EXT)
	#endif //win32
	#ifdef VK_USE_PLATFORM_WIN32
		#define vkAcquireFullScreenExclusiveModeEXT VKEW_GET_FUN(__vkew_vkAcquireFullScreenExclusiveModeEXT)
	#endif //win32
	#ifdef VK_USE_PLATFORM_WIN32
		#define vkReleaseFullScreenExclusiveModeEXT VKEW_GET_FUN(__vkew_vkReleaseFullScreenExclusiveModeEXT)
	#endif //win32
	#ifdef VK_USE_PLATFORM_WIN32
		#define vkAcquireWinrtDisplayNV VKEW_GET_FUN(__vkew_vkAcquireWinrtDisplayNV)
	#endif //win32
	#ifdef VK_USE_PLATFORM_WIN32
		#define vkGetWinrtDisplayNV VKEW_GET_FUN(__vkew_vkGetWinrtDisplayNV)
	#endif //win32
	#ifdef VK_USE_PLATFORM_PROVISIONAL
		#define vkGetPhysicalDeviceVideoCapabilitiesKHR VKEW_GET_FUN(__vkew_vkGetPhysicalDeviceVideoCapabilitiesKHR)
	#endif //provisional
	#ifdef VK_USE_PLATFORM_PROVISIONAL
		#define vkGetPhysicalDeviceVideoFormatPropertiesKHR VKEW_GET_FUN(__vkew_vkGetPhysicalDeviceVideoFormatPropertiesKHR)
	#endif //provisional
	#ifdef VK_USE_PLATFORM_PROVISIONAL
		#define vkCreateVideoSessionKHR VKEW_GET_FUN(__vkew_vkCreateVideoSessionKHR)
	#endif //provisional
	#ifdef VK_USE_PLATFORM_PROVISIONAL
		#define vkDestroyVideoSessionKHR VKEW_GET_FUN(__vkew_vkDestroyVideoSessionKHR)
	#endif //provisional
	#ifdef VK_USE_PLATFORM_PROVISIONAL
		#define vkGetVideoSessionMemoryRequirementsKHR VKEW_GET_FUN(__vkew_vkGetVideoSessionMemoryRequirementsKHR)
	#endif //provisional
	#ifdef VK_USE_PLATFORM_PROVISIONAL
		#define vkBindVideoSessionMemoryKHR VKEW_GET_FUN(__vkew_vkBindVideoSessionMemoryKHR)
	#endif //provisional
	#ifdef VK_USE_PLATFORM_PROVISIONAL
		#define vkCreateVideoSessionParametersKHR VKEW_GET_FUN(__vkew_vkCreateVideoSessionParametersKHR)
	#endif //provisional
	#ifdef VK_USE_PLATFORM_PROVISIONAL
		#define vkUpdateVideoSessionParametersKHR VKEW_GET_FUN(__vkew_vkUpdateVideoSessionParametersKHR)
	#endif //provisional
	#ifdef VK_USE_PLATFORM_PROVISIONAL
		#define vkDestroyVideoSessionParametersKHR VKEW_GET_FUN(__vkew_vkDestroyVideoSessionParametersKHR)
	#endif //provisional
	#ifdef VK_USE_PLATFORM_PROVISIONAL
		#define vkCmdBeginVideoCodingKHR VKEW_GET_FUN(__vkew_vkCmdBeginVideoCodingKHR)
	#endif //provisional
	#ifdef VK_USE_PLATFORM_PROVISIONAL
		#define vkCmdEndVideoCodingKHR VKEW_GET_FUN(__vkew_vkCmdEndVideoCodingKHR)
	#endif //provisional
	#ifdef VK_USE_PLATFORM_PROVISIONAL
		#define vkCmdControlVideoCodingKHR VKEW_GET_FUN(__vkew_vkCmdControlVideoCodingKHR)
	#endif //provisional
	#ifdef VK_USE_PLATFORM_PROVISIONAL
		#define vkCmdDecodeVideoKHR VKEW_GET_FUN(__vkew_vkCmdDecodeVideoKHR)
	#endif //provisional
	#ifdef VK_USE_PLATFORM_PROVISIONAL
		#define vkCmdEncodeVideoKHR VKEW_GET_FUN(__vkew_vkCmdEncodeVideoKHR)
	#endif //provisional
	#ifdef VK_USE_PLATFORM_FUCHSIA
		#define vkGetMemoryZirconHandleFUCHSIA VKEW_GET_FUN(__vkew_vkGetMemoryZirconHandleFUCHSIA)
	#endif //fuchsia
	#ifdef VK_USE_PLATFORM_FUCHSIA
		#define vkGetMemoryZirconHandlePropertiesFUCHSIA VKEW_GET_FUN(__vkew_vkGetMemoryZirconHandlePropertiesFUCHSIA)
	#endif //fuchsia
	#ifdef VK_USE_PLATFORM_FUCHSIA
		#define vkImportSemaphoreZirconHandleFUCHSIA VKEW_GET_FUN(__vkew_vkImportSemaphoreZirconHandleFUCHSIA)
	#endif //fuchsia
	#ifdef VK_USE_PLATFORM_FUCHSIA
		#define vkGetSemaphoreZirconHandleFUCHSIA VKEW_GET_FUN(__vkew_vkGetSemaphoreZirconHandleFUCHSIA)
	#endif //fuchsia
	#ifdef VK_USE_PLATFORM_FUCHSIA
		#define vkCreateBufferCollectionFUCHSIA VKEW_GET_FUN(__vkew_vkCreateBufferCollectionFUCHSIA)
	#endif //fuchsia
	#ifdef VK_USE_PLATFORM_FUCHSIA
		#define vkSetBufferCollectionImageConstraintsFUCHSIA VKEW_GET_FUN(__vkew_vkSetBufferCollectionImageConstraintsFUCHSIA)
	#endif //fuchsia
	#ifdef VK_USE_PLATFORM_FUCHSIA
		#define vkSetBufferCollectionBufferConstraintsFUCHSIA VKEW_GET_FUN(__vkew_vkSetBufferCollectionBufferConstraintsFUCHSIA)
	#endif //fuchsia
	#ifdef VK_USE_PLATFORM_FUCHSIA
		#define vkDestroyBufferCollectionFUCHSIA VKEW_GET_FUN(__vkew_vkDestroyBufferCollectionFUCHSIA)
	#endif //fuchsia
	#ifdef VK_USE_PLATFORM_FUCHSIA
		#define vkGetBufferCollectionPropertiesFUCHSIA VKEW_GET_FUN(__vkew_vkGetBufferCollectionPropertiesFUCHSIA)
	#endif //fuchsia


#ifdef __cplusplus
}
#endif

#endif // __vkew_h
